{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\EcoDrive Simulator\\\\src\\\\pages\\\\SimulationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Play, Pause, RotateCcw, ArrowLeft, Zap, Gauge, Leaf, Clock, MapPin, Car, AlertCircle, Square } from 'lucide-react';\nimport './SimulationDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLap, setCurrentLap] = useState(0);\n  const [totalLaps, setTotalLaps] = useState(3);\n  const [simulationTime, setSimulationTime] = useState(0);\n  const [simulationId, setSimulationId] = useState(null);\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\n  const [simulationFrame, setSimulationFrame] = useState(null);\n  const [simulationError, setSimulationError] = useState(null);\n  const eventSourceRef = useRef(null);\n\n  // Basic simulation data\n  const [simulationData, setSimulationData] = useState({\n    ai: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    },\n    human: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    }\n  });\n  useEffect(() => {\n    // Load simulation config\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n    if (!config.track) {\n      navigate('/simulator');\n      return;\n    }\n\n    // Check if web simulation is available\n    checkWebSimulationAvailability();\n  }, [navigate]);\n  const checkWebSimulationAvailability = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\n      if (response.ok) {\n        setWebSimulationAvailable(true);\n      }\n    } catch (error) {\n      console.log('Web simulation not available:', error);\n      setWebSimulationAvailable(false);\n    }\n  };\n  const startSimulation = async () => {\n    try {\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n      const response = await fetch('http://localhost:5000/api/simulation/start', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          track: config.track,\n          driving_mode: config.driving_mode || 'eco',\n          weather: config.weather || 'clear',\n          surface: config.surface || 'dry',\n          model_version: 'ppo'\n        })\n      });\n      const result = await response.json();\n      if (result.simulation_id) {\n        setSimulationId(result.simulation_id);\n        setIsRunning(true);\n        setSimulationError(null);\n\n        // If web simulation is available, start streaming frames\n        if (result.web_simulation && webSimulationAvailable) {\n          startFrameStreaming();\n        }\n      } else {\n        setSimulationError(result.error || 'Failed to start simulation');\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n      setSimulationError('Failed to start simulation: ' + error.message);\n    }\n  };\n  const startFrameStreaming = () => {\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/frames');\n    eventSourceRef.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n        setSimulationFrame(data.frame);\n        setSimulationTime(data.lap_time);\n        setCurrentLap(Math.floor(data.lap_time / 30)); // Assuming 30s per lap\n      } catch (error) {\n        console.error('Error parsing frame data:', error);\n      }\n    };\n    eventSourceRef.current.onerror = error => {\n      console.error('EventSource error:', error);\n      setSimulationError('Connection to simulation lost');\n    };\n  };\n  const pauseSimulation = async () => {\n    setIsRunning(false);\n    // TODO: Implement pause functionality\n  };\n  const stopSimulation = async () => {\n    try {\n      if (webSimulationAvailable) {\n        const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        });\n        if (response.ok) {\n          console.log('Simulation stopped successfully');\n        } else {\n          console.error('Failed to stop simulation');\n        }\n      }\n      setIsRunning(false);\n      setSimulationError(null);\n    } catch (error) {\n      console.error('Error stopping simulation:', error);\n      setIsRunning(false);\n    }\n  };\n  const resetSimulation = async () => {\n    if (simulationId) {\n      try {\n        await fetch(`http://localhost:5000/api/simulation/${simulationId}/stop`, {\n          method: 'POST'\n        });\n      } catch (error) {\n        console.error('Failed to stop simulation:', error);\n      }\n    }\n    setIsRunning(false);\n    setSimulationTime(0);\n    setCurrentLap(0);\n    setSimulationId(null);\n    setSimulationFrame(null);\n    setSimulationError(null);\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n      eventSourceRef.current = null;\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins}:${secs.padStart(4, '0')}`;\n  };\n\n  // Poll for simulation updates when running\n  useEffect(() => {\n    let interval;\n    if (isRunning && webSimulationAvailable) {\n      interval = setInterval(async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/web-simulation/status');\n          if (response.ok) {\n            const data = await response.json();\n\n            // Update simulation data\n            setSimulationData(prev => ({\n              ...prev,\n              ai: {\n                lapTime: data.lap_time || 0,\n                energyConsumption: data.energy_consumption || 0,\n                co2Saved: (data.energy_consumption || 0) * 0.5,\n                // Rough conversion\n                speed: data.current_speed || 0,\n                throttle: 0,\n                brake: 0\n              },\n              human: {\n                lapTime: data.hamilton_lap_time || 0,\n                energyConsumption: 0,\n                co2Saved: 0,\n                speed: 0,\n                throttle: 0,\n                brake: 0\n              }\n            }));\n\n            // Update simulation time\n            setSimulationTime(data.lap_time || 0);\n\n            // Update video frame - simple and smooth\n            if (data.video_frames && data.video_frames.length > 0) {\n              const latestFrame = data.video_frames[data.video_frames.length - 1];\n              const newFrameData = `data:image/jpeg;base64,${latestFrame}`;\n              setSimulationFrame(newFrameData);\n            }\n\n            // Check if simulation completed\n            if (data.status === 'completed' || data.status === 'error') {\n              setIsRunning(false);\n              if (data.status === 'error') {\n                setSimulationError(data.error || 'Simulation error occurred');\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Failed to fetch simulation status:', error);\n        }\n      }, 500); // Poll every 500ms for much smoother updates\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isRunning, webSimulationAvailable]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/simulator\",\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), \"Back to Setup\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"simulation-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 281,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').driving_mode || 'Eco', \" Mode\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 23\n                }, this), \" \", formatTime(simulationTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 17\n              }, this), webSimulationAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"web-simulation-badge\",\n                children: \"Web Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn ${isRunning ? 'pause' : 'play'}`,\n            onClick: isRunning ? pauseSimulation : startSimulation,\n            children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 50\n            }, this), isRunning ? 'Pause' : 'Start']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopSimulation,\n            children: [/*#__PURE__*/_jsxDEV(Square, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 17\n            }, this), \"Stop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn reset\",\n            onClick: resetSimulation,\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 15\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 272,\n        columnNumber: 9\n      }, this), simulationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: simulationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${currentLap / totalLaps * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 323,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Lap \", currentLap, \" of \", totalLaps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(simulationTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-frame\",\n              children: simulationFrame ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-container-inner\",\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: simulationFrame,\n                  alt: \"Simulation\",\n                  className: `simulation-image ${isLoadingFrame ? 'loading' : ''}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this), isLoadingFrame && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"frame-loading-overlay\",\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"loading-spinner\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 48\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: isRunning ? 'Simulation Running...' : 'No simulation active'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 357,\n                  columnNumber: 21\n                }, this), !webSimulationAvailable && /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Web simulation not available - using mock data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Zap, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 371,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: formatTime(simulationData.ai.lapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Lap Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Gauge, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.speed.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"km/h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 378,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Leaf, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Energy Saved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.co2Saved.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"CO\\u2082 Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 393,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 269,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationDashboard, \"aSxNZwFSwf4EDXIDWVJnKM/kD1k=\", false, function () {\n  return [useNavigate];\n});\n_c = SimulationDashboard;\nexport default SimulationDashboard;\nvar _c;\n$RefreshReg$(_c, \"SimulationDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","Play","Pause","RotateCcw","ArrowLeft","Zap","Gauge","Leaf","Clock","MapPin","Car","AlertCircle","Square","jsxDEV","_jsxDEV","SimulationDashboard","_s","navigate","isRunning","setIsRunning","currentLap","setCurrentLap","totalLaps","setTotalLaps","simulationTime","setSimulationTime","simulationId","setSimulationId","webSimulationAvailable","setWebSimulationAvailable","simulationFrame","setSimulationFrame","simulationError","setSimulationError","eventSourceRef","simulationData","setSimulationData","ai","lapTime","energyConsumption","co2Saved","speed","throttle","brake","human","config","JSON","parse","localStorage","getItem","track","checkWebSimulationAvailability","response","fetch","ok","error","console","log","startSimulation","method","headers","body","stringify","driving_mode","weather","surface","model_version","result","json","simulation_id","web_simulation","startFrameStreaming","message","current","close","EventSource","onmessage","event","data","frame","lap_time","Math","floor","onerror","pauseSimulation","stopSimulation","resetSimulation","formatTime","seconds","mins","secs","toFixed","padStart","interval","setInterval","prev","energy_consumption","current_speed","hamilton_lap_time","video_frames","length","latestFrame","newFrameData","status","clearInterval","className","children","to","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","src","alt","isLoadingFrame","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/EcoDrive Simulator/src/pages/SimulationDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Play, \r\n  Pause, \r\n  RotateCcw, \r\n  ArrowLeft,\r\n  Zap,\r\n  Gauge,\r\n  Leaf,\r\n  Clock,\r\n  MapPin,\r\n  Car,\r\n  AlertCircle,\r\n  Square,\r\n} from 'lucide-react';\r\nimport './SimulationDashboard.css';\r\n\r\nconst SimulationDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentLap, setCurrentLap] = useState(0);\r\n  const [totalLaps, setTotalLaps] = useState(3);\r\n  const [simulationTime, setSimulationTime] = useState(0);\r\n  const [simulationId, setSimulationId] = useState(null);\r\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\r\n  const [simulationFrame, setSimulationFrame] = useState(null);\r\n  const [simulationError, setSimulationError] = useState(null);\r\n  const eventSourceRef = useRef(null);\r\n  \r\n  // Basic simulation data\r\n  const [simulationData, setSimulationData] = useState({\r\n    ai: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n    },\r\n    human: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load simulation config\r\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n    if (!config.track) {\r\n      navigate('/simulator');\r\n      return;\r\n    }\r\n\r\n    // Check if web simulation is available\r\n    checkWebSimulationAvailability();\r\n  }, [navigate]);\r\n\r\n  const checkWebSimulationAvailability = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\r\n      if (response.ok) {\r\n        setWebSimulationAvailable(true);\r\n      }\r\n    } catch (error) {\r\n      console.log('Web simulation not available:', error);\r\n      setWebSimulationAvailable(false);\r\n    }\r\n  };\r\n\r\n  const startSimulation = async () => {\r\n    try {\r\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/simulation/start', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          track: config.track,\r\n          driving_mode: config.driving_mode || 'eco',\r\n          weather: config.weather || 'clear',\r\n          surface: config.surface || 'dry',\r\n          model_version: 'ppo'\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.simulation_id) {\r\n        setSimulationId(result.simulation_id);\r\n        setIsRunning(true);\r\n        setSimulationError(null);\r\n        \r\n        // If web simulation is available, start streaming frames\r\n        if (result.web_simulation && webSimulationAvailable) {\r\n          startFrameStreaming();\r\n        }\r\n      } else {\r\n        setSimulationError(result.error || 'Failed to start simulation');\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to start simulation:', error);\r\n      setSimulationError('Failed to start simulation: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const startFrameStreaming = () => {\r\n    if (eventSourceRef.current) {\r\n      eventSourceRef.current.close();\r\n    }\r\n\r\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/frames');\r\n    \r\n    eventSourceRef.current.onmessage = (event) => {\r\n      try {\r\n        const data = JSON.parse(event.data);\r\n        setSimulationFrame(data.frame);\r\n        setSimulationTime(data.lap_time);\r\n        setCurrentLap(Math.floor(data.lap_time / 30)); // Assuming 30s per lap\r\n      } catch (error) {\r\n        console.error('Error parsing frame data:', error);\r\n      }\r\n    };\r\n\r\n    eventSourceRef.current.onerror = (error) => {\r\n      console.error('EventSource error:', error);\r\n      setSimulationError('Connection to simulation lost');\r\n    };\r\n  };\r\n\r\n  const pauseSimulation = async () => {\r\n    setIsRunning(false);\r\n    // TODO: Implement pause functionality\r\n  };\r\n\r\n  const stopSimulation = async () => {\r\n    try {\r\n      if (webSimulationAvailable) {\r\n        const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          }\r\n        });\r\n        \r\n        if (response.ok) {\r\n          console.log('Simulation stopped successfully');\r\n        } else {\r\n          console.error('Failed to stop simulation');\r\n        }\r\n      }\r\n      \r\n      setIsRunning(false);\r\n      setSimulationError(null);\r\n    } catch (error) {\r\n      console.error('Error stopping simulation:', error);\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const resetSimulation = async () => {\r\n    if (simulationId) {\r\n      try {\r\n        await fetch(`http://localhost:5000/api/simulation/${simulationId}/stop`, {\r\n          method: 'POST'\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to stop simulation:', error);\r\n      }\r\n    }\r\n    \r\n    setIsRunning(false);\r\n    setSimulationTime(0);\r\n    setCurrentLap(0);\r\n    setSimulationId(null);\r\n    setSimulationFrame(null);\r\n    setSimulationError(null);\r\n    \r\n    if (eventSourceRef.current) {\r\n      eventSourceRef.current.close();\r\n      eventSourceRef.current = null;\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = (seconds % 60).toFixed(1);\r\n    return `${mins}:${secs.padStart(4, '0')}`;\r\n  };\r\n\r\n  // Poll for simulation updates when running\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRunning && webSimulationAvailable) {\r\n      interval = setInterval(async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/web-simulation/status');\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            \r\n            // Update simulation data\r\n            setSimulationData(prev => ({\r\n              ...prev,\r\n              ai: {\r\n                lapTime: data.lap_time || 0,\r\n                energyConsumption: data.energy_consumption || 0,\r\n                co2Saved: (data.energy_consumption || 0) * 0.5, // Rough conversion\r\n                speed: data.current_speed || 0,\r\n                throttle: 0,\r\n                brake: 0,\r\n              },\r\n              human: {\r\n                lapTime: data.hamilton_lap_time || 0,\r\n                energyConsumption: 0,\r\n                co2Saved: 0,\r\n                speed: 0,\r\n                throttle: 0,\r\n                brake: 0,\r\n              }\r\n            }));\r\n            \r\n            // Update simulation time\r\n            setSimulationTime(data.lap_time || 0);\r\n            \r\n            // Update video frame - simple and smooth\r\n            if (data.video_frames && data.video_frames.length > 0) {\r\n              const latestFrame = data.video_frames[data.video_frames.length - 1];\r\n              const newFrameData = `data:image/jpeg;base64,${latestFrame}`;\r\n              setSimulationFrame(newFrameData);\r\n            }\r\n            \r\n            // Check if simulation completed\r\n            if (data.status === 'completed' || data.status === 'error') {\r\n              setIsRunning(false);\r\n              if (data.status === 'error') {\r\n                setSimulationError(data.error || 'Simulation error occurred');\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch simulation status:', error);\r\n        }\r\n      }, 500); // Poll every 500ms for much smoother updates\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [isRunning, webSimulationAvailable]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (eventSourceRef.current) {\r\n        eventSourceRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"simulation-dashboard\">\r\n      <div className=\"dashboard-container\">\r\n        {/* Header */}\r\n        <div className=\"dashboard-header\">\r\n          <div className=\"header-left\">\r\n            <Link to=\"/simulator\" className=\"back-button\">\r\n              <ArrowLeft size={20} />\r\n              Back to Setup\r\n            </Link>\r\n            <div className=\"simulation-info\">\r\n              <h1>Live Simulation</h1>\r\n              <div className=\"simulation-meta\">\r\n                <span><MapPin size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track'}</span>\r\n                <span><Car size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').driving_mode || 'Eco'} Mode</span>\r\n                <span><Clock size={16} /> {formatTime(simulationTime)}</span>\r\n                {webSimulationAvailable && (\r\n                  <span className=\"web-simulation-badge\">Web Simulation</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"header-controls\">\r\n            <button \r\n              className={`control-btn ${isRunning ? 'pause' : 'play'}`}\r\n              onClick={isRunning ? pauseSimulation : startSimulation}\r\n            >\r\n              {isRunning ? <Pause size={20} /> : <Play size={20} />}\r\n              {isRunning ? 'Pause' : 'Start'}\r\n            </button>\r\n            {isRunning && (\r\n              <button className=\"control-btn stop\" onClick={stopSimulation}>\r\n                <Square size={20} />\r\n                Stop\r\n              </button>\r\n            )}\r\n            <button className=\"control-btn reset\" onClick={resetSimulation}>\r\n              <RotateCcw size={20} />\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {simulationError && (\r\n          <div className=\"error-alert\">\r\n            <AlertCircle size={20} />\r\n            <span>{simulationError}</span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"progress-section\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${(currentLap / totalLaps) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"progress-info\">\r\n            <span>Lap {currentLap} of {totalLaps}</span>\r\n            <span>{formatTime(simulationTime)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"dashboard-content\">\r\n          {/* Video Panel */}\r\n          <div className=\"video-panel\">\r\n            <div className=\"video-container\">\r\n              <h3>Live Simulation</h3>\r\n              <div className=\"video-frame\">\r\n                {simulationFrame ? (\r\n                  <div className=\"video-container-inner\">\r\n                    <img \r\n                      src={simulationFrame} \r\n                      alt=\"Simulation\" \r\n                      className={`simulation-image ${isLoadingFrame ? 'loading' : ''}`}\r\n                    />\r\n                    {isLoadingFrame && (\r\n                      <div className=\"frame-loading-overlay\">\r\n                        <div className=\"loading-spinner\"></div>\r\n                      </div>\r\n                    )}\r\n                  </div>\r\n                ) : (\r\n                  <div className=\"video-placeholder\">\r\n                    <Car size={48} />\r\n                    <p>{isRunning ? 'Simulation Running...' : 'No simulation active'}</p>\r\n                    {!webSimulationAvailable && (\r\n                      <small>Web simulation not available - using mock data</small>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Metrics Panel */}\r\n          <div className=\"metrics-panel\">\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Zap size={20} />\r\n                <span>AI Performance</span>\r\n              </div>\r\n              <div className=\"metric-value\">{formatTime(simulationData.ai.lapTime)}</div>\r\n              <div className=\"metric-label\">Lap Time</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Gauge size={20} />\r\n                <span>Speed</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.speed.toFixed(1)}</div>\r\n              <div className=\"metric-label\">km/h</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Leaf size={20} />\r\n                <span>Energy Saved</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.co2Saved.toFixed(1)}</div>\r\n              <div className=\"metric-label\">CO₂ Saved</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}