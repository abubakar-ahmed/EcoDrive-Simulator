{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\EcoDrive Simulator\\\\frontend and backend\\\\src\\\\pages\\\\SimulationSetup.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport { MapPin, Car, Cloud, Settings, Play, ArrowLeft, Zap, Leaf, Flame, Droplets, Sun, CloudRain, Loader2 } from 'lucide-react';\nimport './SimulationSetup.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationSetup = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedTrack, setSelectedTrack] = useState('');\n  const [drivingMode, setDrivingMode] = useState('eco');\n  const [weather, setWeather] = useState('dry');\n  const [surface, setSurface] = useState('smooth');\n  const [modelVersion, setModelVersion] = useState('ppo');\n  const [tracks, setTracks] = useState([]);\n  const [loadingTracks, setLoadingTracks] = useState(true);\n\n  // Track metadata for display purposes\n  const trackMetadata = {\n    'Catalunya': {\n      country: 'Spain',\n      length: '4.655 km',\n      difficulty: 'Medium'\n    },\n    'IMS': {\n      country: 'USA',\n      length: '4.023 km',\n      difficulty: 'Medium'\n    },\n    'Silverstone': {\n      country: 'United Kingdom',\n      length: '5.891 km',\n      difficulty: 'Medium'\n    },\n    'Monza': {\n      country: 'Italy',\n      length: '5.793 km',\n      difficulty: 'High'\n    },\n    'Spa': {\n      country: 'Belgium',\n      length: '7.004 km',\n      difficulty: 'High'\n    },\n    'YasMarina': {\n      country: 'UAE',\n      length: '5.554 km',\n      difficulty: 'Medium'\n    },\n    'Austin': {\n      country: 'USA',\n      length: '5.513 km',\n      difficulty: 'Medium'\n    },\n    'BrandsHatch': {\n      country: 'United Kingdom',\n      length: '3.916 km',\n      difficulty: 'High'\n    },\n    'Budapest': {\n      country: 'Hungary',\n      length: '4.381 km',\n      difficulty: 'Medium'\n    },\n    'Hockenheim': {\n      country: 'Germany',\n      length: '4.574 km',\n      difficulty: 'Medium'\n    },\n    'Melbourne': {\n      country: 'Australia',\n      length: '5.303 km',\n      difficulty: 'Medium'\n    },\n    'Mexico City': {\n      country: 'Mexico',\n      length: '4.304 km',\n      difficulty: 'High'\n    },\n    'Montreal': {\n      country: 'Canada',\n      length: '4.361 km',\n      difficulty: 'Medium'\n    },\n    'MoscowRaceway': {\n      country: 'Russia',\n      length: '3.931 km',\n      difficulty: 'Medium'\n    },\n    'Nuerburgring': {\n      country: 'Germany',\n      length: '5.148 km',\n      difficulty: 'Very High'\n    },\n    'Oschersleben': {\n      country: 'Germany',\n      length: '3.696 km',\n      difficulty: 'Medium'\n    },\n    'Sakhir': {\n      country: 'Bahrain',\n      length: '5.412 km',\n      difficulty: 'Medium'\n    },\n    'SaoPaulo': {\n      country: 'Brazil',\n      length: '4.309 km',\n      difficulty: 'High'\n    },\n    'Sepang': {\n      country: 'Malaysia',\n      length: '5.543 km',\n      difficulty: 'Medium'\n    },\n    'Shanghai': {\n      country: 'China',\n      length: '5.451 km',\n      difficulty: 'Medium'\n    },\n    'Sochi': {\n      country: 'Russia',\n      length: '5.848 km',\n      difficulty: 'Medium'\n    },\n    'Spielberg': {\n      country: 'Austria',\n      length: '4.318 km',\n      difficulty: 'Medium'\n    },\n    'Zandvoort': {\n      country: 'Netherlands',\n      length: '4.259 km',\n      difficulty: 'High'\n    }\n  };\n  const drivingModes = [{\n    id: 'eco',\n    name: 'Eco Mode',\n    description: 'Maximum fuel efficiency and minimal emissions',\n    icon: Leaf,\n    color: '#00ff88',\n    characteristics: ['Low fuel consumption', 'Smooth acceleration', 'Early braking', 'Optimal gear shifting']\n  }, {\n    id: 'balanced',\n    name: 'Balanced Mode',\n    description: 'Balance between performance and efficiency',\n    icon: Zap,\n    color: '#ff6b35',\n    characteristics: ['Moderate fuel consumption', 'Balanced acceleration', 'Standard braking', 'Adaptive gear shifting']\n  }, {\n    id: 'aggressive',\n    name: 'Aggressive Mode',\n    description: 'Maximum performance and speed',\n    icon: Flame,\n    color: '#ff1744',\n    characteristics: ['High fuel consumption', 'Rapid acceleration', 'Late braking', 'Performance gear shifting']\n  }];\n  const weatherConditions = [{\n    id: 'dry',\n    name: 'Dry',\n    icon: Sun,\n    description: 'Optimal conditions'\n  }, {\n    id: 'light_rain',\n    name: 'Light Rain',\n    icon: CloudRain,\n    description: 'Reduced grip'\n  }, {\n    id: 'heavy_rain',\n    name: 'Heavy Rain',\n    icon: Droplets,\n    description: 'Significant grip loss'\n  }];\n  const surfaceConditions = [{\n    id: 'smooth',\n    name: 'Smooth',\n    description: 'Optimal surface conditions'\n  }, {\n    id: 'rough',\n    name: 'Rough',\n    description: 'Increased rolling resistance'\n  }, {\n    id: 'wet',\n    name: 'Wet',\n    description: 'Reduced traction'\n  }];\n  const modelVersions = [{\n    id: 'ppo',\n    name: 'PPO (Proximal Policy Optimization)',\n    description: 'Stable and reliable'\n  }, {\n    id: 'sac',\n    name: 'SAC (Soft Actor-Critic)',\n    description: 'High performance'\n  }, {\n    id: 'td3',\n    name: 'TD3 (Twin Delayed DDPG)',\n    description: 'Advanced optimization'\n  }];\n\n  // Load tracks from backend on component mount\n  useEffect(() => {\n    const loadTracks = async () => {\n      try {\n        setLoadingTracks(true);\n        const response = await fetch('http://localhost:5000/api/tracks');\n        const data = await response.json();\n\n        // Transform track names into track objects with metadata\n        const trackList = data.map(trackName => {\n          const metadata = trackMetadata[trackName] || {\n            country: 'Unknown',\n            length: 'Unknown',\n            difficulty: 'Unknown'\n          };\n          return {\n            id: trackName.toLowerCase().replace(/\\s+/g, '_'),\n            name: trackName,\n            country: metadata.country,\n            length: metadata.length,\n            difficulty: metadata.difficulty,\n            image: '/api/placeholder/300/200'\n          };\n        });\n        setTracks(trackList);\n\n        // Set default selected track to first available track\n        if (trackList.length > 0 && !selectedTrack) {\n          setSelectedTrack(trackList[0].id);\n        }\n      } catch (error) {\n        console.error('Failed to load tracks:', error);\n        // Fallback to a few default tracks if API fails\n        setTracks([{\n          id: 'silverstone',\n          name: 'Silverstone',\n          country: 'United Kingdom',\n          length: '5.891 km',\n          difficulty: 'Medium',\n          image: '/api/placeholder/300/200'\n        }, {\n          id: 'monza',\n          name: 'Monza',\n          country: 'Italy',\n          length: '5.793 km',\n          difficulty: 'High',\n          image: '/api/placeholder/300/200'\n        }]);\n      } finally {\n        setLoadingTracks(false);\n      }\n    };\n    loadTracks();\n  }, [selectedTrack]);\n  const handleStartSimulation = () => {\n    const simulationConfig = {\n      track: selectedTrack,\n      drivingMode,\n      weather,\n      surface,\n      modelVersion\n    };\n\n    // Store config in localStorage for the dashboard\n    localStorage.setItem('simulationConfig', JSON.stringify(simulationConfig));\n\n    // Navigate to dashboard\n    navigate('/dashboard');\n  };\n  const containerVariants = {\n    hidden: {\n      opacity: 0\n    },\n    visible: {\n      opacity: 1,\n      transition: {\n        staggerChildren: 0.1\n      }\n    }\n  };\n  const itemVariants = {\n    hidden: {\n      opacity: 0,\n      y: 20\n    },\n    visible: {\n      opacity: 1,\n      y: 0,\n      transition: {\n        duration: 0.5,\n        ease: \"easeOut\"\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-setup\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"setup-header\",\n        variants: containerVariants,\n        initial: \"hidden\",\n        animate: \"visible\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"header-nav\",\n          variants: itemVariants,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 15\n            }, this), \"Back to Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.h1, {\n          className: \"setup-title\",\n          variants: itemVariants,\n          children: \"Simulation Setup\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.p, {\n          className: \"setup-description\",\n          variants: itemVariants,\n          children: \"Configure your simulation parameters to experience AI-powered driving optimization\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"setup-content\",\n        variants: containerVariants,\n        initial: \"hidden\",\n        animate: \"visible\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"setup-section\",\n          variants: itemVariants,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(MapPin, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Select Track\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"track-grid\",\n            children: loadingTracks ? /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"loading-container\",\n              children: [/*#__PURE__*/_jsxDEV(Loader2, {\n                size: 32,\n                className: \"loading-spinner\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: \"Loading tracks...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 17\n            }, this) : tracks.map(track => /*#__PURE__*/_jsxDEV(motion.div, {\n              className: `track-card ${selectedTrack === track.id ? 'selected' : ''}`,\n              onClick: () => setSelectedTrack(track.id),\n              whileHover: {\n                scale: 1.02\n              },\n              whileTap: {\n                scale: 0.98\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-image\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track-placeholder\",\n                  children: /*#__PURE__*/_jsxDEV(MapPin, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 257,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"track-info\",\n                children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: track.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"track-country\",\n                  children: track.country\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"track-details\",\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Length: \", track.length]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"Difficulty: \", track.difficulty]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 21\n              }, this)]\n            }, track.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"setup-section\",\n          variants: itemVariants,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(Car, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Driving Mode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mode-grid\",\n            children: drivingModes.map(mode => {\n              const Icon = mode.icon;\n              return /*#__PURE__*/_jsxDEV(motion.div, {\n                className: `mode-card ${drivingMode === mode.id ? 'selected' : ''}`,\n                onClick: () => setDrivingMode(mode.id),\n                whileHover: {\n                  scale: 1.02\n                },\n                whileTap: {\n                  scale: 0.98\n                },\n                style: {\n                  '--mode-color': mode.color\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"mode-icon\",\n                  children: /*#__PURE__*/_jsxDEV(Icon, {\n                    size: 32\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: mode.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: mode.description\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                  className: \"mode-characteristics\",\n                  children: mode.characteristics.map((char, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: char\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 300,\n                    columnNumber: 25\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 298,\n                  columnNumber: 21\n                }, this)]\n              }, mode.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"setup-section\",\n          variants: itemVariants,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(Cloud, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Conditions\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"conditions-grid\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Weather\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 318,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"condition-options\",\n                children: weatherConditions.map(condition => {\n                  const Icon = condition.icon;\n                  return /*#__PURE__*/_jsxDEV(motion.div, {\n                    className: `condition-option ${weather === condition.id ? 'selected' : ''}`,\n                    onClick: () => setWeather(condition.id),\n                    whileHover: {\n                      scale: 1.05\n                    },\n                    whileTap: {\n                      scale: 0.95\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(Icon, {\n                      size: 24\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 330,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: condition.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 331,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                      children: condition.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 332,\n                      columnNumber: 25\n                    }, this)]\n                  }, condition.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"condition-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Surface\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"condition-options\",\n                children: surfaceConditions.map(condition => /*#__PURE__*/_jsxDEV(motion.div, {\n                  className: `condition-option ${surface === condition.id ? 'selected' : ''}`,\n                  onClick: () => setSurface(condition.id),\n                  whileHover: {\n                    scale: 1.05\n                  },\n                  whileTap: {\n                    scale: 0.95\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    children: condition.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 350,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n                    children: condition.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 351,\n                    columnNumber: 23\n                  }, this)]\n                }, condition.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 339,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 310,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"setup-section\",\n          variants: itemVariants,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"section-header\",\n            children: [/*#__PURE__*/_jsxDEV(Settings, {\n              size: 24\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Advanced Settings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 363,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advanced-settings\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"setting-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"AI Model Version\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n                value: modelVersion,\n                onChange: e => setModelVersion(e.target.value),\n                className: \"form-select\",\n                children: modelVersions.map(model => /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: model.id,\n                  children: [model.name, \" - \", model.description]\n                }, model.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 375,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 367,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"setup-actions\",\n          variants: itemVariants,\n          children: /*#__PURE__*/_jsxDEV(motion.button, {\n            className: \"btn-primary start-simulation\",\n            onClick: handleStartSimulation,\n            whileHover: {\n              scale: 1.05\n            },\n            whileTap: {\n              scale: 0.95\n            },\n            children: [/*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 392,\n              columnNumber: 15\n            }, this), \"Start Simulation\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 386,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationSetup, \"EjEyaT84FPdQGAL9YS9MbFvuHWI=\", false, function () {\n  return [useNavigate];\n});\n_c = SimulationSetup;\nexport default SimulationSetup;\nvar _c;\n$RefreshReg$(_c, \"SimulationSetup\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","motion","MapPin","Car","Cloud","Settings","Play","ArrowLeft","Zap","Leaf","Flame","Droplets","Sun","CloudRain","Loader2","jsxDEV","_jsxDEV","SimulationSetup","_s","navigate","selectedTrack","setSelectedTrack","drivingMode","setDrivingMode","weather","setWeather","surface","setSurface","modelVersion","setModelVersion","tracks","setTracks","loadingTracks","setLoadingTracks","trackMetadata","country","length","difficulty","drivingModes","id","name","description","icon","color","characteristics","weatherConditions","surfaceConditions","modelVersions","loadTracks","response","fetch","data","json","trackList","map","trackName","metadata","toLowerCase","replace","image","error","console","handleStartSimulation","simulationConfig","track","localStorage","setItem","JSON","stringify","containerVariants","hidden","opacity","visible","transition","staggerChildren","itemVariants","y","duration","ease","className","children","div","variants","initial","animate","to","size","fileName","_jsxFileName","lineNumber","columnNumber","h1","p","onClick","whileHover","scale","whileTap","mode","Icon","style","char","index","condition","value","onChange","e","target","model","button","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/EcoDrive Simulator/frontend and backend/src/pages/SimulationSetup.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  MapPin, \r\n  Car, \r\n  Cloud, \r\n  Settings, \r\n  Play, \r\n  ArrowLeft,\r\n  Zap,\r\n  Leaf,\r\n  Flame,\r\n  Droplets,\r\n  Sun,\r\n  CloudRain,\r\n  Loader2\r\n} from 'lucide-react';\r\nimport './SimulationSetup.css';\r\n\r\nconst SimulationSetup = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedTrack, setSelectedTrack] = useState('');\r\n  const [drivingMode, setDrivingMode] = useState('eco');\r\n  const [weather, setWeather] = useState('dry');\r\n  const [surface, setSurface] = useState('smooth');\r\n  const [modelVersion, setModelVersion] = useState('ppo');\r\n  const [tracks, setTracks] = useState([]);\r\n  const [loadingTracks, setLoadingTracks] = useState(true);\r\n\r\n  // Track metadata for display purposes\r\n  const trackMetadata = {\r\n    'Catalunya': { country: 'Spain', length: '4.655 km', difficulty: 'Medium' },\r\n    'IMS': { country: 'USA', length: '4.023 km', difficulty: 'Medium' },\r\n    'Silverstone': { country: 'United Kingdom', length: '5.891 km', difficulty: 'Medium' },\r\n    'Monza': { country: 'Italy', length: '5.793 km', difficulty: 'High' },\r\n    'Spa': { country: 'Belgium', length: '7.004 km', difficulty: 'High' },\r\n    'YasMarina': { country: 'UAE', length: '5.554 km', difficulty: 'Medium' },\r\n    'Austin': { country: 'USA', length: '5.513 km', difficulty: 'Medium' },\r\n    'BrandsHatch': { country: 'United Kingdom', length: '3.916 km', difficulty: 'High' },\r\n    'Budapest': { country: 'Hungary', length: '4.381 km', difficulty: 'Medium' },\r\n    'Hockenheim': { country: 'Germany', length: '4.574 km', difficulty: 'Medium' },\r\n    'Melbourne': { country: 'Australia', length: '5.303 km', difficulty: 'Medium' },\r\n    'Mexico City': { country: 'Mexico', length: '4.304 km', difficulty: 'High' },\r\n    'Montreal': { country: 'Canada', length: '4.361 km', difficulty: 'Medium' },\r\n    'MoscowRaceway': { country: 'Russia', length: '3.931 km', difficulty: 'Medium' },\r\n    'Nuerburgring': { country: 'Germany', length: '5.148 km', difficulty: 'Very High' },\r\n    'Oschersleben': { country: 'Germany', length: '3.696 km', difficulty: 'Medium' },\r\n    'Sakhir': { country: 'Bahrain', length: '5.412 km', difficulty: 'Medium' },\r\n    'SaoPaulo': { country: 'Brazil', length: '4.309 km', difficulty: 'High' },\r\n    'Sepang': { country: 'Malaysia', length: '5.543 km', difficulty: 'Medium' },\r\n    'Shanghai': { country: 'China', length: '5.451 km', difficulty: 'Medium' },\r\n    'Sochi': { country: 'Russia', length: '5.848 km', difficulty: 'Medium' },\r\n    'Spielberg': { country: 'Austria', length: '4.318 km', difficulty: 'Medium' },\r\n    'Zandvoort': { country: 'Netherlands', length: '4.259 km', difficulty: 'High' }\r\n  };\r\n\r\n  const drivingModes = [\r\n    {\r\n      id: 'eco',\r\n      name: 'Eco Mode',\r\n      description: 'Maximum fuel efficiency and minimal emissions',\r\n      icon: Leaf,\r\n      color: '#00ff88',\r\n      characteristics: ['Low fuel consumption', 'Smooth acceleration', 'Early braking', 'Optimal gear shifting']\r\n    },\r\n    {\r\n      id: 'balanced',\r\n      name: 'Balanced Mode',\r\n      description: 'Balance between performance and efficiency',\r\n      icon: Zap,\r\n      color: '#ff6b35',\r\n      characteristics: ['Moderate fuel consumption', 'Balanced acceleration', 'Standard braking', 'Adaptive gear shifting']\r\n    },\r\n    {\r\n      id: 'aggressive',\r\n      name: 'Aggressive Mode',\r\n      description: 'Maximum performance and speed',\r\n      icon: Flame,\r\n      color: '#ff1744',\r\n      characteristics: ['High fuel consumption', 'Rapid acceleration', 'Late braking', 'Performance gear shifting']\r\n    }\r\n  ];\r\n\r\n  const weatherConditions = [\r\n    { id: 'dry', name: 'Dry', icon: Sun, description: 'Optimal conditions' },\r\n    { id: 'light_rain', name: 'Light Rain', icon: CloudRain, description: 'Reduced grip' },\r\n    { id: 'heavy_rain', name: 'Heavy Rain', icon: Droplets, description: 'Significant grip loss' }\r\n  ];\r\n\r\n  const surfaceConditions = [\r\n    { id: 'smooth', name: 'Smooth', description: 'Optimal surface conditions' },\r\n    { id: 'rough', name: 'Rough', description: 'Increased rolling resistance' },\r\n    { id: 'wet', name: 'Wet', description: 'Reduced traction' }\r\n  ];\r\n\r\n  const modelVersions = [\r\n    { id: 'ppo', name: 'PPO (Proximal Policy Optimization)', description: 'Stable and reliable' },\r\n    { id: 'sac', name: 'SAC (Soft Actor-Critic)', description: 'High performance' },\r\n    { id: 'td3', name: 'TD3 (Twin Delayed DDPG)', description: 'Advanced optimization' }\r\n  ];\r\n\r\n  // Load tracks from backend on component mount\r\n  useEffect(() => {\r\n    const loadTracks = async () => {\r\n      try {\r\n        setLoadingTracks(true);\r\n        const response = await fetch('http://localhost:5000/api/tracks');\r\n        const data = await response.json();\r\n        \r\n        // Transform track names into track objects with metadata\r\n        const trackList = data.map(trackName => {\r\n          const metadata = trackMetadata[trackName] || { \r\n            country: 'Unknown', \r\n            length: 'Unknown', \r\n            difficulty: 'Unknown' \r\n          };\r\n          \r\n          return {\r\n            id: trackName.toLowerCase().replace(/\\s+/g, '_'),\r\n            name: trackName,\r\n            country: metadata.country,\r\n            length: metadata.length,\r\n            difficulty: metadata.difficulty,\r\n            image: '/api/placeholder/300/200'\r\n          };\r\n        });\r\n        \r\n        setTracks(trackList);\r\n        \r\n        // Set default selected track to first available track\r\n        if (trackList.length > 0 && !selectedTrack) {\r\n          setSelectedTrack(trackList[0].id);\r\n        }\r\n      } catch (error) {\r\n        console.error('Failed to load tracks:', error);\r\n        // Fallback to a few default tracks if API fails\r\n        setTracks([\r\n          {\r\n            id: 'silverstone',\r\n            name: 'Silverstone',\r\n            country: 'United Kingdom',\r\n            length: '5.891 km',\r\n            difficulty: 'Medium',\r\n            image: '/api/placeholder/300/200'\r\n          },\r\n          {\r\n            id: 'monza',\r\n            name: 'Monza',\r\n            country: 'Italy',\r\n            length: '5.793 km',\r\n            difficulty: 'High',\r\n            image: '/api/placeholder/300/200'\r\n          }\r\n        ]);\r\n      } finally {\r\n        setLoadingTracks(false);\r\n      }\r\n    };\r\n\r\n    loadTracks();\r\n  }, [selectedTrack]);\r\n\r\n  const handleStartSimulation = () => {\r\n    const simulationConfig = {\r\n      track: selectedTrack,\r\n      drivingMode,\r\n      weather,\r\n      surface,\r\n      modelVersion\r\n    };\r\n    \r\n    // Store config in localStorage for the dashboard\r\n    localStorage.setItem('simulationConfig', JSON.stringify(simulationConfig));\r\n    \r\n    // Navigate to dashboard\r\n    navigate('/dashboard');\r\n  };\r\n\r\n  const containerVariants = {\r\n    hidden: { opacity: 0 },\r\n    visible: {\r\n      opacity: 1,\r\n      transition: {\r\n        staggerChildren: 0.1\r\n      }\r\n    }\r\n  };\r\n\r\n  const itemVariants = {\r\n    hidden: { opacity: 0, y: 20 },\r\n    visible: {\r\n      opacity: 1,\r\n      y: 0,\r\n      transition: {\r\n        duration: 0.5,\r\n        ease: \"easeOut\"\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"simulation-setup\">\r\n      <div className=\"container\">\r\n        <motion.div \r\n          className=\"setup-header\"\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          <motion.div className=\"header-nav\" variants={itemVariants}>\r\n            <Link to=\"/\" className=\"back-button\">\r\n              <ArrowLeft size={20} />\r\n              Back to Home\r\n            </Link>\r\n          </motion.div>\r\n          \r\n          <motion.h1 className=\"setup-title\" variants={itemVariants}>\r\n            Simulation Setup\r\n          </motion.h1>\r\n          \r\n          <motion.p className=\"setup-description\" variants={itemVariants}>\r\n            Configure your simulation parameters to experience AI-powered driving optimization\r\n          </motion.p>\r\n        </motion.div>\r\n\r\n        <motion.div \r\n          className=\"setup-content\"\r\n          variants={containerVariants}\r\n          initial=\"hidden\"\r\n          animate=\"visible\"\r\n        >\r\n          {/* Track Selection */}\r\n          <motion.div className=\"setup-section\" variants={itemVariants}>\r\n            <div className=\"section-header\">\r\n              <MapPin size={24} />\r\n              <h2>Select Track</h2>\r\n            </div>\r\n            \r\n            <div className=\"track-grid\">\r\n              {loadingTracks ? (\r\n                <div className=\"loading-container\">\r\n                  <Loader2 size={32} className=\"loading-spinner\" />\r\n                  <p>Loading tracks...</p>\r\n                </div>\r\n              ) : (\r\n                tracks.map((track) => (\r\n                  <motion.div\r\n                    key={track.id}\r\n                    className={`track-card ${selectedTrack === track.id ? 'selected' : ''}`}\r\n                    onClick={() => setSelectedTrack(track.id)}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                  >\r\n                    <div className=\"track-image\">\r\n                      <div className=\"track-placeholder\">\r\n                        <MapPin size={32} />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"track-info\">\r\n                      <h3>{track.name}</h3>\r\n                      <p className=\"track-country\">{track.country}</p>\r\n                      <div className=\"track-details\">\r\n                        <span>Length: {track.length}</span>\r\n                        <span>Difficulty: {track.difficulty}</span>\r\n                      </div>\r\n                    </div>\r\n                  </motion.div>\r\n                ))\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Driving Mode Selection */}\r\n          <motion.div className=\"setup-section\" variants={itemVariants}>\r\n            <div className=\"section-header\">\r\n              <Car size={24} />\r\n              <h2>Driving Mode</h2>\r\n            </div>\r\n            \r\n            <div className=\"mode-grid\">\r\n              {drivingModes.map((mode) => {\r\n                const Icon = mode.icon;\r\n                return (\r\n                  <motion.div\r\n                    key={mode.id}\r\n                    className={`mode-card ${drivingMode === mode.id ? 'selected' : ''}`}\r\n                    onClick={() => setDrivingMode(mode.id)}\r\n                    whileHover={{ scale: 1.02 }}\r\n                    whileTap={{ scale: 0.98 }}\r\n                    style={{ '--mode-color': mode.color }}\r\n                  >\r\n                    <div className=\"mode-icon\">\r\n                      <Icon size={32} />\r\n                    </div>\r\n                    <h3>{mode.name}</h3>\r\n                    <p>{mode.description}</p>\r\n                    <ul className=\"mode-characteristics\">\r\n                      {mode.characteristics.map((char, index) => (\r\n                        <li key={index}>{char}</li>\r\n                      ))}\r\n                    </ul>\r\n                  </motion.div>\r\n                );\r\n              })}\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Weather & Surface Conditions */}\r\n          <motion.div className=\"setup-section\" variants={itemVariants}>\r\n            <div className=\"section-header\">\r\n              <Cloud size={24} />\r\n              <h2>Conditions</h2>\r\n            </div>\r\n            \r\n            <div className=\"conditions-grid\">\r\n              <div className=\"condition-group\">\r\n                <h3>Weather</h3>\r\n                <div className=\"condition-options\">\r\n                  {weatherConditions.map((condition) => {\r\n                    const Icon = condition.icon;\r\n                    return (\r\n                      <motion.div\r\n                        key={condition.id}\r\n                        className={`condition-option ${weather === condition.id ? 'selected' : ''}`}\r\n                        onClick={() => setWeather(condition.id)}\r\n                        whileHover={{ scale: 1.05 }}\r\n                        whileTap={{ scale: 0.95 }}\r\n                      >\r\n                        <Icon size={24} />\r\n                        <span>{condition.name}</span>\r\n                        <small>{condition.description}</small>\r\n                      </motion.div>\r\n                    );\r\n                  })}\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"condition-group\">\r\n                <h3>Surface</h3>\r\n                <div className=\"condition-options\">\r\n                  {surfaceConditions.map((condition) => (\r\n                    <motion.div\r\n                      key={condition.id}\r\n                      className={`condition-option ${surface === condition.id ? 'selected' : ''}`}\r\n                      onClick={() => setSurface(condition.id)}\r\n                      whileHover={{ scale: 1.05 }}\r\n                      whileTap={{ scale: 0.95 }}\r\n                    >\r\n                      <span>{condition.name}</span>\r\n                      <small>{condition.description}</small>\r\n                    </motion.div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Advanced Settings */}\r\n          <motion.div className=\"setup-section\" variants={itemVariants}>\r\n            <div className=\"section-header\">\r\n              <Settings size={24} />\r\n              <h2>Advanced Settings</h2>\r\n            </div>\r\n            \r\n            <div className=\"advanced-settings\">\r\n              <div className=\"setting-group\">\r\n                <label>AI Model Version</label>\r\n                <select \r\n                  value={modelVersion} \r\n                  onChange={(e) => setModelVersion(e.target.value)}\r\n                  className=\"form-select\"\r\n                >\r\n                  {modelVersions.map((model) => (\r\n                    <option key={model.id} value={model.id}>\r\n                      {model.name} - {model.description}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Start Simulation */}\r\n          <motion.div className=\"setup-actions\" variants={itemVariants}>\r\n            <motion.button\r\n              className=\"btn-primary start-simulation\"\r\n              onClick={handleStartSimulation}\r\n              whileHover={{ scale: 1.05 }}\r\n              whileTap={{ scale: 0.95 }}\r\n            >\r\n              <Play size={20} />\r\n              Start Simulation\r\n            </motion.button>\r\n          </motion.div>\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationSetup;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}