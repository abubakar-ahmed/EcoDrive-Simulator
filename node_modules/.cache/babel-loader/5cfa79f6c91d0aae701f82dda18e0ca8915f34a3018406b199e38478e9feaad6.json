{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\EcoDrive Simulator\\\\src\\\\pages\\\\SimulationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Play, Pause, RotateCcw, ArrowLeft, Zap, Gauge, Leaf, Clock, MapPin, Car, AlertCircle, Square } from 'lucide-react';\nimport './SimulationDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLap, setCurrentLap] = useState(0);\n  const [totalLaps, setTotalLaps] = useState(3);\n  const [simulationTime, setSimulationTime] = useState(0);\n  const [simulationId, setSimulationId] = useState(null);\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\n  const [simulationFrame, setSimulationFrame] = useState(null);\n  const [simulationError, setSimulationError] = useState(null);\n  const [fallbackMode, setFallbackMode] = useState(false);\n  const eventSourceRef = useRef(null);\n\n  // Basic simulation data\n  const [simulationData, setSimulationData] = useState({\n    ai: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    },\n    human: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    }\n  });\n  useEffect(() => {\n    // Load simulation config\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n    if (!config.track) {\n      navigate('/simulator');\n      return;\n    }\n\n    // Check if web simulation is available\n    checkWebSimulationAvailability();\n  }, [navigate]);\n  const checkWebSimulationAvailability = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\n      if (response.ok) {\n        const data = await response.json();\n        // Web simulation is available if we get a response (even if idle)\n        setWebSimulationAvailable(true);\n        console.log('Web simulation status:', data);\n      }\n    } catch (error) {\n      console.log('Web simulation not available:', error);\n      setWebSimulationAvailable(false);\n    }\n  };\n  const startSimulation = async () => {\n    console.log('Starting simulation...');\n    try {\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n      const savedSimulationId = localStorage.getItem('simulationId');\n      console.log('Config:', config);\n      console.log('Saved Simulation ID:', savedSimulationId);\n      if (savedSimulationId) {\n        // Use existing simulation ID\n        console.log('Resuming existing simulation:', savedSimulationId);\n        setSimulationId(savedSimulationId);\n        setIsRunning(true);\n        setSimulationError(null);\n\n        // Start streaming if web simulation is available\n        if (webSimulationAvailable) {\n          console.log('ðŸ“¡ Starting frame streaming...');\n          startFrameStreaming();\n        }\n      } else {\n        // Start new simulation\n        console.log('ðŸ†• Starting new simulation...');\n        const response = await fetch('http://localhost:5000/api/simulation/start', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            track: config.track,\n            model_version: config.model_version || 'ppo',\n            user: 'web_user'\n          })\n        });\n        const result = await response.json();\n        console.log('Simulation start result:', result);\n        if (result.simulation_id) {\n          console.log('Simulation started successfully!');\n          setSimulationId(result.simulation_id);\n          localStorage.setItem('simulationId', result.simulation_id);\n          setIsRunning(true);\n          setSimulationError(null);\n\n          // If web simulation is available, start streaming frames\n          if (result.web_simulation && webSimulationAvailable) {\n            console.log('Starting frame streaming...');\n            startFrameStreaming();\n          }\n        } else {\n          const errorMsg = result.error || 'Failed to start simulation';\n          console.error('Simulation start failed:', errorMsg);\n          setSimulationError(errorMsg);\n\n          // If F1Tenth is not available, start mock simulation\n          if (errorMsg.includes('F1Tenth')) {\n            console.log('Starting fallback mock simulation...');\n            setFallbackMode(true);\n            startMockSimulation();\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n      setSimulationError('Failed to start simulation: ' + error.message);\n\n      // Fallback to mock simulation\n      console.log('Starting fallback mock simulation due to error...');\n      setFallbackMode(true);\n      startMockSimulation();\n    }\n  };\n  const startMockSimulation = () => {\n    console.log('Starting mock simulation in fallback mode');\n    setIsRunning(true);\n    setSimulationError(null);\n\n    // Simulate a lap over 90 seconds\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 0.01; // 1% every 100ms\n      const lapTime = progress * 90; // 90 second lap\n\n      setSimulationTime(lapTime);\n      setCurrentLap(Math.floor(progress * 10));\n\n      // Update simulation data\n      setSimulationData(prev => ({\n        ...prev,\n        ai: {\n          lapTime: lapTime,\n          energyConsumption: lapTime * 0.03,\n          co2Saved: lapTime * 0.015,\n          speed: 120 + Math.sin(progress * Math.PI) * 40,\n          throttle: 60 + Math.sin(progress * Math.PI * 2) * 20,\n          brake: 20 + Math.sin(progress * Math.PI * 3) * 15\n        }\n      }));\n\n      // Add mock frame data\n      const mockFrame = {\n        step: Math.floor(progress * 1000),\n        time: lapTime,\n        speed: 120 + Math.sin(progress * Math.PI) * 40,\n        position: [progress * 100, Math.sin(progress * Math.PI) * 50],\n        progress: progress\n      };\n      setSimulationFrame(JSON.stringify(mockFrame));\n      if (progress >= 1.0) {\n        clearInterval(interval);\n        setIsRunning(false);\n\n        // Store mock results\n        const mockResults = {\n          ai_lap_time: 87.5,\n          ai_lap_time_formatted: \"1:27.500\",\n          hamilton_lap_time: 89.2,\n          hamilton_lap_time_formatted: \"1:29.200\",\n          time_difference: -1.7,\n          ai_faster: true,\n          percentage_difference: -1.9\n        };\n        localStorage.setItem('simulationResults', JSON.stringify(mockResults));\n        console.log('Mock simulation completed');\n      }\n    }, 100);\n\n    // Store interval reference for cleanup\n    eventSourceRef.current = {\n      close: () => clearInterval(interval)\n    };\n  };\n  const startFrameStreaming = () => {\n    console.log('ðŸ“¡ Starting frame streaming...');\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/stream');\n    eventSourceRef.current.onopen = () => {\n      console.log('EventSource connection opened');\n    };\n    eventSourceRef.current.onerror = error => {\n      console.error('EventSource error:', error);\n    };\n    eventSourceRef.current.onmessage = event => {\n      try {\n        const data = JSON.parse(event.data);\n\n        // Debug: Log ALL received data to verify structure\n        console.log('ðŸ“¥ SSE Data Received:', {\n          status: data.status,\n          current_speed: data.current_speed,\n          co2_saved: data.co2_saved,\n          lap_time: data.lap_time,\n          progress: data.progress,\n          throttle: data.current_throttle,\n          brake: data.current_brake\n        });\n\n        // Update simulation data with live values\n        setSimulationData(prev => {\n          var _data$hamilton_data;\n          const newAIData = {\n            ...prev.ai,\n            lapTime: data.lap_time || 0,\n            energyConsumption: data.energy_consumption || 0,\n            co2Saved: data.co2_saved || 0,\n            // Live COâ‚‚ savings\n            speed: data.current_speed || 0,\n            // Live speed\n            throttle: data.current_throttle || 0,\n            brake: data.current_brake || 0,\n            progress: data.progress || 0\n          };\n          console.log('ðŸ”„ Updating State:', {\n            speed: newAIData.speed,\n            co2Saved: newAIData.co2Saved\n          });\n          return {\n            ...prev,\n            ai: newAIData,\n            human: {\n              ...prev.human,\n              lapTime: ((_data$hamilton_data = data.hamilton_data) === null || _data$hamilton_data === void 0 ? void 0 : _data$hamilton_data.lap_time) || 0,\n              energyConsumption: 0,\n              co2Saved: 0,\n              speed: 0,\n              throttle: 0,\n              brake: 0\n            }\n          };\n        });\n\n        // Update simulation time and progress\n        setSimulationTime(data.lap_time || 0);\n        setCurrentLap(Math.floor((data.progress || 0) * 10));\n\n        // Update video frame (only check current_frame now, no more video_frames array)\n        if (data.current_frame) {\n          setSimulationFrame(data.current_frame);\n        }\n\n        // Check if simulation completed\n        if (data.status === 'completed') {\n          setIsRunning(false);\n          // Store results for comparison page\n          if (data.comparison_data) {\n            var _data$comparison_data, _data$comparison_data2, _data$comparison_data3, _data$comparison_data4, _data$comparison_data5, _config$model_version, _data$comparison_data6, _data$comparison_data7;\n            // Transform comparison_data to match ResultsComparison format\n            const transformedData = {\n              track: config.track || 'Silverstone',\n              hamilton: {\n                driver_name: ((_data$comparison_data = data.comparison_data.hamilton_data) === null || _data$comparison_data === void 0 ? void 0 : _data$comparison_data.driver_name) || 'Lewis Hamilton',\n                lap_time: data.comparison_data.hamilton_lap_time,\n                lap_time_formatted: data.comparison_data.hamilton_lap_time_formatted,\n                energy_consumption: ((_data$comparison_data2 = data.comparison_data.hamilton_data) === null || _data$comparison_data2 === void 0 ? void 0 : _data$comparison_data2.energy_consumption) || 2.8,\n                average_speed: ((_data$comparison_data3 = data.comparison_data.hamilton_data) === null || _data$comparison_data3 === void 0 ? void 0 : _data$comparison_data3.average_speed) || 185.5,\n                data_source: ((_data$comparison_data4 = data.comparison_data.hamilton_data) === null || _data$comparison_data4 === void 0 ? void 0 : _data$comparison_data4.data_source) || 'FastF1 API',\n                is_real_data: ((_data$comparison_data5 = data.comparison_data.hamilton_data) === null || _data$comparison_data5 === void 0 ? void 0 : _data$comparison_data5.is_real_data) !== false\n              },\n              ai: {\n                model: ((_config$model_version = config.model_version) === null || _config$model_version === void 0 ? void 0 : _config$model_version.toUpperCase()) || 'PPO',\n                lap_time: data.comparison_data.ai_lap_time,\n                lap_time_formatted: data.comparison_data.ai_lap_time_formatted,\n                energy_consumption: data.energy_consumption || 2.4,\n                average_speed: data.current_speed || 200.0,\n                efficiency_gain: (_data$comparison_data6 = data.comparison_data.hamilton_data) !== null && _data$comparison_data6 !== void 0 && _data$comparison_data6.energy_consumption ? ((data.comparison_data.hamilton_data.energy_consumption - (data.energy_consumption || 2.4)) / data.comparison_data.hamilton_data.energy_consumption * 100).toFixed(1) : 14.3\n              },\n              comparison: {\n                time_difference: data.comparison_data.time_difference,\n                energy_saved: (((_data$comparison_data7 = data.comparison_data.hamilton_data) === null || _data$comparison_data7 === void 0 ? void 0 : _data$comparison_data7.energy_consumption) || 2.8) - (data.energy_consumption || 2.4),\n                co2_saved: data.comparison_data.co2_saved || 0,\n                co2_saved_formatted: data.comparison_data.co2_saved_formatted || '0.000 kg',\n                ai_faster: data.comparison_data.ai_faster,\n                ai_more_efficient: true\n              }\n            };\n            localStorage.setItem('simulationResults', JSON.stringify(transformedData));\n            console.log('âœ… Stored simulation results:', transformedData);\n          }\n        } else if (data.status === 'error') {\n          setIsRunning(false);\n          setSimulationError(data.error_message || 'Simulation error occurred');\n        }\n      } catch (error) {\n        console.error('Error parsing stream data:', error);\n      }\n    };\n    eventSourceRef.current.onerror = error => {\n      console.error('EventSource error:', error);\n      setSimulationError('Connection to simulation lost');\n    };\n  };\n  const pauseSimulation = async () => {\n    setIsRunning(false);\n    // TODO: Implement pause functionality\n  };\n  const stopSimulation = async () => {\n    try {\n      console.log('Stopping simulation...');\n\n      // Stop web simulation if available\n      if (webSimulationAvailable) {\n        try {\n          const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            console.log('Web simulation stopped successfully');\n          } else {\n            console.error('Failed to stop web simulation');\n          }\n        } catch (error) {\n          console.error('Error stopping web simulation:', error);\n        }\n      }\n\n      // Close EventSource connection\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n        console.log('EventSource connection closed');\n      }\n\n      // Update UI state\n      setIsRunning(false);\n      setSimulationError(null);\n      console.log('Simulation stopped');\n    } catch (error) {\n      console.error('Error stopping simulation:', error);\n      setIsRunning(false);\n    }\n  };\n  const resetSimulation = async () => {\n    try {\n      console.log('Resetting simulation...');\n\n      // Stop current simulation first\n      await stopSimulation();\n\n      // Clear all simulation data\n      setIsRunning(false);\n      setSimulationTime(0);\n      setCurrentLap(0);\n      setSimulationId(null);\n      setSimulationFrame(null);\n      setSimulationError(null);\n      setFallbackMode(false);\n\n      // Reset simulation data\n      setSimulationData({\n        ai: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0\n        },\n        human: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0\n        }\n      });\n\n      // Clear localStorage\n      localStorage.removeItem('simulationId');\n      localStorage.removeItem('simulationResults');\n      localStorage.removeItem('simulationConfig');\n      console.log('Simulation reset complete');\n    } catch (error) {\n      console.error('Error resetting simulation:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins}:${secs.padStart(4, '0')}`;\n  };\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/simulator\",\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 15\n            }, this), \"Back to Setup\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"simulation-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').model_version || 'PPO', \" Model\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 23\n                }, this), \" \", formatTime(simulationTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 17\n              }, this), webSimulationAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"web-simulation-badge\",\n                children: \"Web Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 467,\n                columnNumber: 19\n              }, this), fallbackMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fallback-badge\",\n                children: \"Mock Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 19\n              }, this), simulationError && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-badge\",\n                children: [\"Error: \", simulationError]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 19\n              }, this), !isRunning && !simulationError && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge\",\n                children: \"Ready to Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), isRunning && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge running\",\n                children: \"Running...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn ${isRunning ? 'pause' : 'play'}`,\n            onClick: isRunning ? pauseSimulation : startSimulation,\n            children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 50\n            }, this), isRunning ? 'Pause' : 'Start']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 486,\n            columnNumber: 13\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopSimulation,\n            children: [/*#__PURE__*/_jsxDEV(Square, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 495,\n              columnNumber: 17\n            }, this), \"Stop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 494,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn reset\",\n            onClick: resetSimulation,\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 500,\n              columnNumber: 15\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 499,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 485,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 9\n      }, this), simulationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 509,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: simulationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 510,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 508,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${simulationData.ai.progress * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 517,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 516,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Lap Progress: \", Math.round(simulationData.ai.progress * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 523,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(simulationTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 524,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 522,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 515,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 533,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-frame\",\n              children: simulationFrame ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: simulationFrame,\n                alt: \"Simulation\",\n                className: \"simulation-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 536,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 48\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: isRunning ? 'Simulation Running...' : 'No simulation active'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 21\n                }, this), fallbackMode && /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Running in mock simulation mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 546,\n                  columnNumber: 23\n                }, this), !webSimulationAvailable && !fallbackMode && /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Web simulation not available - using mock data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 549,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 532,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 531,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Zap, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 561,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 562,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 560,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: formatTime(simulationData.ai.lapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 564,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Lap Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 565,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 559,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Gauge, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 570,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"F1 Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 571,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 569,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.speed.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 573,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"km/h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 574,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Leaf, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"CO\\u2082 Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.co2Saved.toFixed(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 582,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"kg CO\\u2082 Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 583,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 577,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 558,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 529,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 452,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 451,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationDashboard, \"BdqQW8cPoSA/i2/7l3ihlyVUCcA=\", false, function () {\n  return [useNavigate];\n});\n_c = SimulationDashboard;\nexport default SimulationDashboard;\nvar _c;\n$RefreshReg$(_c, \"SimulationDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","Play","Pause","RotateCcw","ArrowLeft","Zap","Gauge","Leaf","Clock","MapPin","Car","AlertCircle","Square","jsxDEV","_jsxDEV","SimulationDashboard","_s","navigate","isRunning","setIsRunning","currentLap","setCurrentLap","totalLaps","setTotalLaps","simulationTime","setSimulationTime","simulationId","setSimulationId","webSimulationAvailable","setWebSimulationAvailable","simulationFrame","setSimulationFrame","simulationError","setSimulationError","fallbackMode","setFallbackMode","eventSourceRef","simulationData","setSimulationData","ai","lapTime","energyConsumption","co2Saved","speed","throttle","brake","human","config","JSON","parse","localStorage","getItem","track","checkWebSimulationAvailability","response","fetch","ok","data","json","console","log","error","startSimulation","savedSimulationId","startFrameStreaming","method","headers","body","stringify","model_version","user","result","simulation_id","setItem","web_simulation","errorMsg","includes","startMockSimulation","message","progress","interval","setInterval","Math","floor","prev","sin","PI","mockFrame","step","time","position","clearInterval","mockResults","ai_lap_time","ai_lap_time_formatted","hamilton_lap_time","hamilton_lap_time_formatted","time_difference","ai_faster","percentage_difference","current","close","EventSource","onopen","onerror","onmessage","event","status","current_speed","co2_saved","lap_time","current_throttle","current_brake","_data$hamilton_data","newAIData","energy_consumption","hamilton_data","current_frame","comparison_data","_data$comparison_data","_data$comparison_data2","_data$comparison_data3","_data$comparison_data4","_data$comparison_data5","_config$model_version","_data$comparison_data6","_data$comparison_data7","transformedData","hamilton","driver_name","lap_time_formatted","average_speed","data_source","is_real_data","model","toUpperCase","efficiency_gain","toFixed","comparison","energy_saved","co2_saved_formatted","ai_more_efficient","error_message","pauseSimulation","stopSimulation","resetSimulation","removeItem","formatTime","seconds","mins","secs","padStart","className","children","to","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","round","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/EcoDrive Simulator/src/pages/SimulationDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { \n  Play, \n  Pause, \n  RotateCcw, \n  ArrowLeft,\n  Zap,\n  Gauge,\n  Leaf,\n  Clock,\n  MapPin,\n  Car,\n  AlertCircle,\n  Square,\n} from 'lucide-react';\nimport './SimulationDashboard.css';\n\nconst SimulationDashboard = () => {\n  const navigate = useNavigate();\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLap, setCurrentLap] = useState(0);\n  const [totalLaps, setTotalLaps] = useState(3);\n  const [simulationTime, setSimulationTime] = useState(0);\n  const [simulationId, setSimulationId] = useState(null);\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\n  const [simulationFrame, setSimulationFrame] = useState(null);\n  const [simulationError, setSimulationError] = useState(null);\n  const [fallbackMode, setFallbackMode] = useState(false);\n  const eventSourceRef = useRef(null);\n  \n  // Basic simulation data\n  const [simulationData, setSimulationData] = useState({\n    ai: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0,\n    },\n    human: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0,\n    }\n  });\n\n  useEffect(() => {\n    // Load simulation config\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n    if (!config.track) {\n      navigate('/simulator');\n      return;\n    }\n\n    // Check if web simulation is available\n    checkWebSimulationAvailability();\n  }, [navigate]);\n\n  const checkWebSimulationAvailability = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\n      if (response.ok) {\n        const data = await response.json();\n        // Web simulation is available if we get a response (even if idle)\n        setWebSimulationAvailable(true);\n        console.log('Web simulation status:', data);\n      }\n    } catch (error) {\n      console.log('Web simulation not available:', error);\n      setWebSimulationAvailable(false);\n    }\n  };\n\n  const startSimulation = async () => {\n    console.log('Starting simulation...');\n    try {\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n      const savedSimulationId = localStorage.getItem('simulationId');\n      \n      console.log('Config:', config);\n      console.log('Saved Simulation ID:', savedSimulationId);\n      \n      if (savedSimulationId) {\n        // Use existing simulation ID\n        console.log('Resuming existing simulation:', savedSimulationId);\n        setSimulationId(savedSimulationId);\n        setIsRunning(true);\n        setSimulationError(null);\n        \n        // Start streaming if web simulation is available\n        if (webSimulationAvailable) {\n          console.log('ðŸ“¡ Starting frame streaming...');\n          startFrameStreaming();\n        }\n      } else {\n        // Start new simulation\n        console.log('ðŸ†• Starting new simulation...');\n        const response = await fetch('http://localhost:5000/api/simulation/start', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json',\n          },\n          body: JSON.stringify({\n            track: config.track,\n            model_version: config.model_version || 'ppo',\n            user: 'web_user'\n          })\n        });\n\n        const result = await response.json();\n        console.log('Simulation start result:', result);\n        \n        if (result.simulation_id) {\n          console.log('Simulation started successfully!');\n          setSimulationId(result.simulation_id);\n          localStorage.setItem('simulationId', result.simulation_id);\n          setIsRunning(true);\n          setSimulationError(null);\n          \n          // If web simulation is available, start streaming frames\n          if (result.web_simulation && webSimulationAvailable) {\n            console.log('Starting frame streaming...');\n            startFrameStreaming();\n          }\n        } else {\n          const errorMsg = result.error || 'Failed to start simulation';\n          console.error('Simulation start failed:', errorMsg);\n          setSimulationError(errorMsg);\n          \n          // If F1Tenth is not available, start mock simulation\n          if (errorMsg.includes('F1Tenth')) {\n            console.log('Starting fallback mock simulation...');\n            setFallbackMode(true);\n            startMockSimulation();\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n      setSimulationError('Failed to start simulation: ' + error.message);\n      \n      // Fallback to mock simulation\n      console.log('Starting fallback mock simulation due to error...');\n      setFallbackMode(true);\n      startMockSimulation();\n    }\n  };\n\n  const startMockSimulation = () => {\n    console.log('Starting mock simulation in fallback mode');\n    setIsRunning(true);\n    setSimulationError(null);\n    \n    // Simulate a lap over 90 seconds\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 0.01; // 1% every 100ms\n      const lapTime = progress * 90; // 90 second lap\n      \n      setSimulationTime(lapTime);\n      setCurrentLap(Math.floor(progress * 10));\n      \n      // Update simulation data\n      setSimulationData(prev => ({\n        ...prev,\n        ai: {\n          lapTime: lapTime,\n          energyConsumption: lapTime * 0.03,\n          co2Saved: lapTime * 0.015,\n          speed: 120 + Math.sin(progress * Math.PI) * 40,\n          throttle: 60 + Math.sin(progress * Math.PI * 2) * 20,\n          brake: 20 + Math.sin(progress * Math.PI * 3) * 15,\n        }\n      }));\n      \n      // Add mock frame data\n      const mockFrame = {\n        step: Math.floor(progress * 1000),\n        time: lapTime,\n        speed: 120 + Math.sin(progress * Math.PI) * 40,\n        position: [progress * 100, Math.sin(progress * Math.PI) * 50],\n        progress: progress\n      };\n      setSimulationFrame(JSON.stringify(mockFrame));\n      \n      if (progress >= 1.0) {\n        clearInterval(interval);\n        setIsRunning(false);\n        \n        // Store mock results\n        const mockResults = {\n          ai_lap_time: 87.5,\n          ai_lap_time_formatted: \"1:27.500\",\n          hamilton_lap_time: 89.2,\n          hamilton_lap_time_formatted: \"1:29.200\",\n          time_difference: -1.7,\n          ai_faster: true,\n          percentage_difference: -1.9\n        };\n        localStorage.setItem('simulationResults', JSON.stringify(mockResults));\n        \n        console.log('Mock simulation completed');\n      }\n    }, 100);\n    \n    // Store interval reference for cleanup\n    eventSourceRef.current = { close: () => clearInterval(interval) };\n  };\n\n  const startFrameStreaming = () => {\n    console.log('ðŸ“¡ Starting frame streaming...');\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/stream');\n    \n    eventSourceRef.current.onopen = () => {\n      console.log('EventSource connection opened');\n    };\n    \n    eventSourceRef.current.onerror = (error) => {\n      console.error('EventSource error:', error);\n    };\n    \n    eventSourceRef.current.onmessage = (event) => {\n      try {\n        const data = JSON.parse(event.data);\n        \n        // Debug: Log ALL received data to verify structure\n        console.log('ðŸ“¥ SSE Data Received:', {\n          status: data.status,\n          current_speed: data.current_speed,\n          co2_saved: data.co2_saved,\n          lap_time: data.lap_time,\n          progress: data.progress,\n          throttle: data.current_throttle,\n          brake: data.current_brake\n        });\n        \n        // Update simulation data with live values\n        setSimulationData(prev => {\n          const newAIData = {\n            ...prev.ai,\n            lapTime: data.lap_time || 0,\n            energyConsumption: data.energy_consumption || 0,\n            co2Saved: data.co2_saved || 0, // Live COâ‚‚ savings\n            speed: data.current_speed || 0, // Live speed\n            throttle: data.current_throttle || 0,\n            brake: data.current_brake || 0,\n            progress: data.progress || 0,\n          };\n          \n          console.log('ðŸ”„ Updating State:', {\n            speed: newAIData.speed,\n            co2Saved: newAIData.co2Saved\n          });\n          \n          return {\n            ...prev,\n            ai: newAIData,\n            human: {\n              ...prev.human,\n            lapTime: data.hamilton_data?.lap_time || 0,\n            energyConsumption: 0,\n            co2Saved: 0,\n            speed: 0,\n            throttle: 0,\n            brake: 0,\n          }\n          };\n        });\n        \n        // Update simulation time and progress\n        setSimulationTime(data.lap_time || 0);\n        setCurrentLap(Math.floor((data.progress || 0) * 10));\n        \n        // Update video frame (only check current_frame now, no more video_frames array)\n        if (data.current_frame) {\n          setSimulationFrame(data.current_frame);\n        }\n        \n        // Check if simulation completed\n        if (data.status === 'completed') {\n          setIsRunning(false);\n          // Store results for comparison page\n          if (data.comparison_data) {\n            // Transform comparison_data to match ResultsComparison format\n            const transformedData = {\n              track: config.track || 'Silverstone',\n              hamilton: {\n                driver_name: data.comparison_data.hamilton_data?.driver_name || 'Lewis Hamilton',\n                lap_time: data.comparison_data.hamilton_lap_time,\n                lap_time_formatted: data.comparison_data.hamilton_lap_time_formatted,\n                energy_consumption: data.comparison_data.hamilton_data?.energy_consumption || 2.8,\n                average_speed: data.comparison_data.hamilton_data?.average_speed || 185.5,\n                data_source: data.comparison_data.hamilton_data?.data_source || 'FastF1 API',\n                is_real_data: data.comparison_data.hamilton_data?.is_real_data !== false\n              },\n              ai: {\n                model: config.model_version?.toUpperCase() || 'PPO',\n                lap_time: data.comparison_data.ai_lap_time,\n                lap_time_formatted: data.comparison_data.ai_lap_time_formatted,\n                energy_consumption: data.energy_consumption || 2.4,\n                average_speed: data.current_speed || 200.0,\n                efficiency_gain: data.comparison_data.hamilton_data?.energy_consumption ? \n                  ((data.comparison_data.hamilton_data.energy_consumption - (data.energy_consumption || 2.4)) / data.comparison_data.hamilton_data.energy_consumption * 100).toFixed(1) : 14.3\n              },\n              comparison: {\n                time_difference: data.comparison_data.time_difference,\n                energy_saved: (data.comparison_data.hamilton_data?.energy_consumption || 2.8) - (data.energy_consumption || 2.4),\n                co2_saved: data.comparison_data.co2_saved || 0,\n                co2_saved_formatted: data.comparison_data.co2_saved_formatted || '0.000 kg',\n                ai_faster: data.comparison_data.ai_faster,\n                ai_more_efficient: true\n              }\n            };\n            localStorage.setItem('simulationResults', JSON.stringify(transformedData));\n            console.log('âœ… Stored simulation results:', transformedData);\n          }\n        } else if (data.status === 'error') {\n          setIsRunning(false);\n          setSimulationError(data.error_message || 'Simulation error occurred');\n        }\n      } catch (error) {\n        console.error('Error parsing stream data:', error);\n      }\n    };\n\n    eventSourceRef.current.onerror = (error) => {\n      console.error('EventSource error:', error);\n      setSimulationError('Connection to simulation lost');\n    };\n  };\n\n  const pauseSimulation = async () => {\n    setIsRunning(false);\n    // TODO: Implement pause functionality\n  };\n\n  const stopSimulation = async () => {\n    try {\n      console.log('Stopping simulation...');\n      \n      // Stop web simulation if available\n      if (webSimulationAvailable) {\n        try {\n          const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json',\n            }\n          });\n          \n          if (response.ok) {\n            console.log('Web simulation stopped successfully');\n          } else {\n            console.error('Failed to stop web simulation');\n          }\n        } catch (error) {\n          console.error('Error stopping web simulation:', error);\n        }\n      }\n      \n      // Close EventSource connection\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n        console.log('EventSource connection closed');\n      }\n      \n      // Update UI state\n      setIsRunning(false);\n      setSimulationError(null);\n      console.log('Simulation stopped');\n      \n    } catch (error) {\n      console.error('Error stopping simulation:', error);\n      setIsRunning(false);\n    }\n  };\n\n  const resetSimulation = async () => {\n    try {\n      console.log('Resetting simulation...');\n      \n      // Stop current simulation first\n      await stopSimulation();\n      \n      // Clear all simulation data\n      setIsRunning(false);\n      setSimulationTime(0);\n      setCurrentLap(0);\n      setSimulationId(null);\n      setSimulationFrame(null);\n      setSimulationError(null);\n      setFallbackMode(false);\n      \n      // Reset simulation data\n      setSimulationData({\n        ai: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0,\n        },\n        human: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0,\n        }\n      });\n      \n      // Clear localStorage\n      localStorage.removeItem('simulationId');\n      localStorage.removeItem('simulationResults');\n      localStorage.removeItem('simulationConfig');\n      \n      console.log('Simulation reset complete');\n      \n    } catch (error) {\n      console.error('Error resetting simulation:', error);\n    }\n  };\n\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins}:${secs.padStart(4, '0')}`;\n  };\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n      }\n    };\n  }, []);\n\n  return (\n    <div className=\"simulation-dashboard\">\n      <div className=\"dashboard-container\">\n        {/* Header */}\n        <div className=\"dashboard-header\">\n          <div className=\"header-left\">\n            <Link to=\"/simulator\" className=\"back-button\">\n              <ArrowLeft size={20} />\n              Back to Setup\n            </Link>\n            <div className=\"simulation-info\">\n              <h1>Live Simulation</h1>\n              <div className=\"simulation-meta\">\n                <span><MapPin size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track'}</span>\n                <span><Car size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').model_version || 'PPO'} Model</span>\n                <span><Clock size={16} /> {formatTime(simulationTime)}</span>\n                {webSimulationAvailable && (\n                  <span className=\"web-simulation-badge\">Web Simulation</span>\n                )}\n                {fallbackMode && (\n                  <span className=\"fallback-badge\">Mock Simulation</span>\n                )}\n                {simulationError && (\n                  <span className=\"error-badge\">Error: {simulationError}</span>\n                )}\n                {!isRunning && !simulationError && (\n                  <span className=\"status-badge\">Ready to Start</span>\n                )}\n                {isRunning && (\n                  <span className=\"status-badge running\">Running...</span>\n                )}\n              </div>\n            </div>\n          </div>\n          \n          <div className=\"header-controls\">\n            <button \n              className={`control-btn ${isRunning ? 'pause' : 'play'}`}\n              onClick={isRunning ? pauseSimulation : startSimulation}\n            >\n              {isRunning ? <Pause size={20} /> : <Play size={20} />}\n              {isRunning ? 'Pause' : 'Start'}\n            </button>\n            {isRunning && (\n              <button className=\"control-btn stop\" onClick={stopSimulation}>\n                <Square size={20} />\n                Stop\n              </button>\n            )}\n            <button className=\"control-btn reset\" onClick={resetSimulation}>\n              <RotateCcw size={20} />\n              Reset\n            </button>\n          </div>\n        </div>\n\n        {/* Error Display */}\n        {simulationError && (\n          <div className=\"error-alert\">\n            <AlertCircle size={20} />\n            <span>{simulationError}</span>\n          </div>\n        )}\n\n        {/* Progress Bar */}\n        <div className=\"progress-section\">\n          <div className=\"progress-bar\">\n            <div \n              className=\"progress-fill\" \n              style={{ width: `${simulationData.ai.progress * 100}%` }}\n            ></div>\n          </div>\n          <div className=\"progress-info\">\n            <span>Lap Progress: {Math.round(simulationData.ai.progress * 100)}%</span>\n            <span>{formatTime(simulationTime)}</span>\n          </div>\n        </div>\n\n        {/* Main Content */}\n        <div className=\"dashboard-content\">\n          {/* Video Panel */}\n          <div className=\"video-panel\">\n            <div className=\"video-container\">\n              <h3>Live Simulation</h3>\n              <div className=\"video-frame\">\n                {simulationFrame ? (\n                  <img \n                    src={simulationFrame} \n                    alt=\"Simulation\" \n                    className=\"simulation-image\"\n                  />\n                ) : (\n                  <div className=\"video-placeholder\">\n                    <Car size={48} />\n                    <p>{isRunning ? 'Simulation Running...' : 'No simulation active'}</p>\n                    {fallbackMode && (\n                      <small>Running in mock simulation mode</small>\n                    )}\n                    {!webSimulationAvailable && !fallbackMode && (\n                      <small>Web simulation not available - using mock data</small>\n                    )}\n                  </div>\n                )}\n              </div>\n            </div>\n          </div>\n\n          {/* Metrics Panel */}\n          <div className=\"metrics-panel\">\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <Zap size={20} />\n                <span>AI Performance</span>\n              </div>\n              <div className=\"metric-value\">{formatTime(simulationData.ai.lapTime)}</div>\n              <div className=\"metric-label\">Lap Time</div>\n            </div>\n\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <Gauge size={20} />\n                <span>F1 Speed</span>\n              </div>\n              <div className=\"metric-value\">{simulationData.ai.speed.toFixed(1)}</div>\n              <div className=\"metric-label\">km/h</div>\n            </div>\n\n            <div className=\"metric-card\">\n              <div className=\"metric-header\">\n                <Leaf size={20} />\n                <span>COâ‚‚ Savings</span>\n              </div>\n              <div className=\"metric-value\">{simulationData.ai.co2Saved.toFixed(3)}</div>\n              <div className=\"metric-label\">kg COâ‚‚ Saved</div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default SimulationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}