{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\EcoDrive Simulator\\\\src\\\\pages\\\\SimulationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { Play, Pause, RotateCcw, ArrowLeft, Zap, Gauge, Leaf, Clock, MapPin, Car, AlertCircle, Square } from 'lucide-react';\nimport './SimulationDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLap, setCurrentLap] = useState(0);\n  const [totalLaps, setTotalLaps] = useState(3);\n  const [simulationTime, setSimulationTime] = useState(0);\n  const [simulationId, setSimulationId] = useState(null);\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\n  const [simulationFrame, setSimulationFrame] = useState(null);\n  const [simulationError, setSimulationError] = useState(null);\n  const [fallbackMode, setFallbackMode] = useState(false);\n  const eventSourceRef = useRef(null);\n\n  // Basic simulation data\n  const [simulationData, setSimulationData] = useState({\n    ai: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    },\n    human: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0\n    }\n  });\n  useEffect(() => {\n    // Load simulation config\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n    if (!config.track) {\n      navigate('/simulator');\n      return;\n    }\n\n    // Check if web simulation is available\n    checkWebSimulationAvailability();\n  }, [navigate]);\n  const checkWebSimulationAvailability = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\n      if (response.ok) {\n        const data = await response.json();\n        // Web simulation is available if we get a response (even if idle)\n        setWebSimulationAvailable(true);\n        console.log('Web simulation status:', data);\n      }\n    } catch (error) {\n      console.log('Web simulation not available:', error);\n      setWebSimulationAvailable(false);\n    }\n  };\n  const startSimulation = async () => {\n    console.log('Starting simulation...');\n    try {\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n      const savedSimulationId = localStorage.getItem('simulationId');\n      console.log('Config:', config);\n      console.log('Saved Simulation ID:', savedSimulationId);\n      if (savedSimulationId) {\n        // Use existing simulation ID\n        console.log('Resuming existing simulation:', savedSimulationId);\n        setSimulationId(savedSimulationId);\n        setIsRunning(true);\n        setSimulationError(null);\n\n        // Start streaming if web simulation is available\n        if (webSimulationAvailable) {\n          console.log('ðŸ“¡ Starting frame streaming...');\n          startFrameStreaming();\n        }\n      } else {\n        // Start new simulation\n        console.log('ðŸ†• Starting new simulation...');\n        const response = await fetch('http://localhost:5000/api/simulation/start', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            track: config.track,\n            model_version: config.model_version || 'ppo',\n            user: 'web_user'\n          })\n        });\n        const result = await response.json();\n        console.log('Simulation start result:', result);\n        if (result.simulation_id) {\n          console.log('Simulation started successfully!');\n          setSimulationId(result.simulation_id);\n          localStorage.setItem('simulationId', result.simulation_id);\n          setIsRunning(true);\n          setSimulationError(null);\n\n          // If web simulation is available, start streaming frames\n          if (result.web_simulation && webSimulationAvailable) {\n            console.log('Starting frame streaming...');\n            startFrameStreaming();\n          }\n        } else {\n          const errorMsg = result.error || 'Failed to start simulation';\n          console.error('Simulation start failed:', errorMsg);\n          setSimulationError(errorMsg);\n\n          // If F1Tenth is not available, start mock simulation\n          if (errorMsg.includes('F1Tenth')) {\n            console.log('Starting fallback mock simulation...');\n            setFallbackMode(true);\n            startMockSimulation();\n          }\n        }\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n      setSimulationError('Failed to start simulation: ' + error.message);\n\n      // Fallback to mock simulation\n      console.log('Starting fallback mock simulation due to error...');\n      setFallbackMode(true);\n      startMockSimulation();\n    }\n  };\n  const startMockSimulation = () => {\n    console.log('Starting mock simulation in fallback mode');\n    setIsRunning(true);\n    setSimulationError(null);\n\n    // Simulate a lap over 90 seconds\n    let progress = 0;\n    const interval = setInterval(() => {\n      progress += 0.01; // 1% every 100ms\n      const lapTime = progress * 90; // 90 second lap\n\n      setSimulationTime(lapTime);\n      setCurrentLap(Math.floor(progress * 10));\n\n      // Update simulation data\n      setSimulationData(prev => ({\n        ...prev,\n        ai: {\n          lapTime: lapTime,\n          energyConsumption: lapTime * 0.03,\n          co2Saved: lapTime * 0.015,\n          speed: 120 + Math.sin(progress * Math.PI) * 40,\n          throttle: 60 + Math.sin(progress * Math.PI * 2) * 20,\n          brake: 20 + Math.sin(progress * Math.PI * 3) * 15\n        }\n      }));\n\n      // Add mock frame data\n      const mockFrame = {\n        step: Math.floor(progress * 1000),\n        time: lapTime,\n        speed: 120 + Math.sin(progress * Math.PI) * 40,\n        position: [progress * 100, Math.sin(progress * Math.PI) * 50],\n        progress: progress\n      };\n      setSimulationFrame(JSON.stringify(mockFrame));\n      if (progress >= 1.0) {\n        clearInterval(interval);\n        setIsRunning(false);\n\n        // Store mock results\n        const mockResults = {\n          ai_lap_time: 87.5,\n          ai_lap_time_formatted: \"1:27.500\",\n          hamilton_lap_time: 89.2,\n          hamilton_lap_time_formatted: \"1:29.200\",\n          time_difference: -1.7,\n          ai_faster: true,\n          percentage_difference: -1.9\n        };\n        localStorage.setItem('simulationResults', JSON.stringify(mockResults));\n        console.log('Mock simulation completed');\n      }\n    }, 100);\n\n    // Store interval reference for cleanup\n    eventSourceRef.current = {\n      close: () => clearInterval(interval)\n    };\n  };\n  const startFrameStreaming = () => {\n    console.log('ðŸ“¡ Starting frame streaming...');\n    if (eventSourceRef.current) {\n      eventSourceRef.current.close();\n    }\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/stream');\n    eventSourceRef.current.onopen = () => {\n      console.log('EventSource connection opened');\n    };\n    eventSourceRef.current.onerror = error => {\n      console.error('EventSource error:', error);\n    };\n    eventSourceRef.current.onmessage = event => {\n      try {\n        console.log('Received streaming data:', event.data);\n        const data = JSON.parse(event.data);\n\n        // Debug: Log key telemetry values\n        console.log('Real-time telemetry:', {\n          speed: data.current_speed,\n          co2_saved: data.co2_saved,\n          throttle: data.current_throttle,\n          brake: data.current_brake,\n          progress: data.progress\n        });\n\n        // Update simulation data\n        setSimulationData(prev => ({\n          ...prev,\n          ai: {\n            lapTime: data.lap_time || 0,\n            energyConsumption: data.energy_consumption || 0,\n            co2Saved: data.co2_saved || 0,\n            // Use actual COâ‚‚ savings from backend\n            speed: data.current_speed || 0,\n            throttle: data.current_throttle || 0,\n            // Use actual throttle data\n            brake: data.current_brake || 0,\n            // Use actual brake data\n            progress: data.progress || 0 // Use actual progress\n          },\n          human: {\n            lapTime: data.hamilton_lap_time || 0,\n            energyConsumption: 0,\n            co2Saved: 0,\n            speed: 0,\n            throttle: 0,\n            brake: 0\n          }\n        }));\n\n        // Update simulation time and progress\n        setSimulationTime(data.lap_time || 0);\n        setCurrentLap(Math.floor((data.progress || 0) * 10)); // Convert progress to lap number\n\n        // Update video frame if available\n        if (data.video_frames && data.video_frames.length > 0) {\n          const latestFrame = data.video_frames[data.video_frames.length - 1];\n          try {\n            const frameData = JSON.parse(latestFrame);\n            if (frameData.frame_data) {\n              setSimulationFrame(frameData.frame_data);\n            }\n          } catch (e) {\n            console.log('Error parsing frame data:', e);\n          }\n        }\n\n        // Also check for direct frame data\n        if (data.current_frame) {\n          setSimulationFrame(data.current_frame);\n        }\n\n        // Check if simulation completed\n        if (data.status === 'completed') {\n          setIsRunning(false);\n          // Store results for comparison page\n          if (data.comparison_data) {\n            localStorage.setItem('simulationResults', JSON.stringify(data.comparison_data));\n          }\n        } else if (data.status === 'error') {\n          setIsRunning(false);\n          setSimulationError(data.error_message || 'Simulation error occurred');\n        }\n      } catch (error) {\n        console.error('Error parsing stream data:', error);\n      }\n    };\n    eventSourceRef.current.onerror = error => {\n      console.error('EventSource error:', error);\n      setSimulationError('Connection to simulation lost');\n    };\n  };\n  const pauseSimulation = async () => {\n    setIsRunning(false);\n    // TODO: Implement pause functionality\n  };\n  const stopSimulation = async () => {\n    try {\n      console.log('Stopping simulation...');\n\n      // Stop web simulation if available\n      if (webSimulationAvailable) {\n        try {\n          const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json'\n            }\n          });\n          if (response.ok) {\n            console.log('Web simulation stopped successfully');\n          } else {\n            console.error('Failed to stop web simulation');\n          }\n        } catch (error) {\n          console.error('Error stopping web simulation:', error);\n        }\n      }\n\n      // Close EventSource connection\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n        eventSourceRef.current = null;\n        console.log('EventSource connection closed');\n      }\n\n      // Update UI state\n      setIsRunning(false);\n      setSimulationError(null);\n      console.log('Simulation stopped');\n    } catch (error) {\n      console.error('Error stopping simulation:', error);\n      setIsRunning(false);\n    }\n  };\n  const resetSimulation = async () => {\n    try {\n      console.log('Resetting simulation...');\n\n      // Stop current simulation first\n      await stopSimulation();\n\n      // Clear all simulation data\n      setIsRunning(false);\n      setSimulationTime(0);\n      setCurrentLap(0);\n      setSimulationId(null);\n      setSimulationFrame(null);\n      setSimulationError(null);\n      setFallbackMode(false);\n\n      // Reset simulation data\n      setSimulationData({\n        ai: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0\n        },\n        human: {\n          lapTime: 0,\n          energyConsumption: 0,\n          co2Saved: 0,\n          speed: 0,\n          throttle: 0,\n          brake: 0\n        }\n      });\n\n      // Clear localStorage\n      localStorage.removeItem('simulationId');\n      localStorage.removeItem('simulationResults');\n      localStorage.removeItem('simulationConfig');\n      console.log('Simulation reset complete');\n    } catch (error) {\n      console.error('Error resetting simulation:', error);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins}:${secs.padStart(4, '0')}`;\n  };\n\n  // Poll for simulation updates when running\n  useEffect(() => {\n    let interval;\n    if (isRunning && webSimulationAvailable) {\n      interval = setInterval(async () => {\n        try {\n          const response = await fetch('http://localhost:5000/api/web-simulation/status');\n          if (response.ok) {\n            const data = await response.json();\n\n            // Update simulation data\n            setSimulationData(prev => {\n              var _data$comparison_data;\n              return {\n                ...prev,\n                ai: {\n                  lapTime: data.lap_time || 0,\n                  energyConsumption: data.energy_consumption || 0,\n                  co2Saved: data.co2_saved || 0,\n                  // Use actual COâ‚‚ savings from backend\n                  speed: data.current_speed || 0,\n                  // This now shows F1-scaled speeds\n                  throttle: 0,\n                  brake: 0\n                },\n                human: {\n                  lapTime: ((_data$comparison_data = data.comparison_data) === null || _data$comparison_data === void 0 ? void 0 : _data$comparison_data.hamilton_lap_time) || 0,\n                  energyConsumption: 0,\n                  co2Saved: 0,\n                  speed: 0,\n                  throttle: 0,\n                  brake: 0\n                }\n              };\n            });\n\n            // Update simulation time\n            setSimulationTime(data.lap_time || 0);\n\n            // Update video frame - simple and smooth\n            if (data.video_frames && data.video_frames.length > 0) {\n              const latestFrame = data.video_frames[data.video_frames.length - 1];\n              try {\n                const frameData = JSON.parse(latestFrame);\n                if (frameData.frame_data) {\n                  setSimulationFrame(frameData.frame_data);\n                }\n              } catch (e) {\n                console.log('Error parsing frame data:', e);\n              }\n            }\n\n            // Also check for direct frame data\n            if (data.current_frame) {\n              setSimulationFrame(data.current_frame);\n            }\n\n            // Check if simulation completed\n            if (data.status === 'completed' || data.status === 'error') {\n              setIsRunning(false);\n              if (data.status === 'error') {\n                setSimulationError(data.error || 'Simulation error occurred');\n              }\n            }\n          }\n        } catch (error) {\n          console.error('Failed to fetch simulation status:', error);\n        }\n      }, 100); // Poll every 500ms for much smoother updates\n    }\n    return () => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [isRunning, webSimulationAvailable]);\n\n  // Cleanup on unmount\n  useEffect(() => {\n    return () => {\n      if (eventSourceRef.current) {\n        eventSourceRef.current.close();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/simulator\",\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 501,\n              columnNumber: 15\n            }, this), \"Back to Setup\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 500,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 505,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"simulation-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 507,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 507,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 508,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').model_version || 'PPO', \" Model\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 508,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 509,\n                  columnNumber: 23\n                }, this), \" \", formatTime(simulationTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 509,\n                columnNumber: 17\n              }, this), webSimulationAvailable && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"web-simulation-badge\",\n                children: \"Web Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 19\n              }, this), fallbackMode && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fallback-badge\",\n                children: \"Mock Simulation\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 514,\n                columnNumber: 19\n              }, this), simulationError && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"error-badge\",\n                children: [\"Error: \", simulationError]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this), !isRunning && !simulationError && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge\",\n                children: \"Ready to Start\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 520,\n                columnNumber: 19\n              }, this), isRunning && /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status-badge running\",\n                children: \"Running...\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 523,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 506,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 504,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 499,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn ${isRunning ? 'pause' : 'play'}`,\n            onClick: isRunning ? pauseSimulation : startSimulation,\n            children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 534,\n              columnNumber: 50\n            }, this), isRunning ? 'Pause' : 'Start']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), isRunning && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn stop\",\n            onClick: stopSimulation,\n            children: [/*#__PURE__*/_jsxDEV(Square, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 539,\n              columnNumber: 17\n            }, this), \"Stop\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 538,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn reset\",\n            onClick: resetSimulation,\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 544,\n              columnNumber: 15\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 543,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 498,\n        columnNumber: 9\n      }, this), simulationError && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-alert\",\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 553,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: simulationError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 554,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 552,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${simulationData.ai.progress * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 561,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 560,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Lap Progress: \", Math.round(simulationData.ai.progress * 100), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 567,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(simulationTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 568,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 566,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 559,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-panel\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-frame\",\n              children: simulationFrame ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: simulationFrame,\n                alt: \"Simulation\",\n                className: \"simulation-image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 580,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 48\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 587,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: isRunning ? 'Simulation Running...' : 'No simulation active'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 21\n                }, this), fallbackMode && /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Running in mock simulation mode\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 23\n                }, this), !webSimulationAvailable && !fallbackMode && /*#__PURE__*/_jsxDEV(\"small\", {\n                  children: \"Web simulation not available - using mock data\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 586,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 578,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 575,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"metrics-panel\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Zap, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 606,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: formatTime(simulationData.ai.lapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 608,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Lap Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 609,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Gauge, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 614,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"F1 Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 615,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.speed.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 617,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"km/h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 612,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Leaf, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"CO\\u2082 Savings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 624,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 622,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.co2Saved.toFixed(3)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"kg CO\\u2082 Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 627,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 602,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 495,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationDashboard, \"yChZ3P5HvbFylaIhSlW00A/2rKU=\", false, function () {\n  return [useNavigate];\n});\n_c = SimulationDashboard;\nexport default SimulationDashboard;\nvar _c;\n$RefreshReg$(_c, \"SimulationDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","Play","Pause","RotateCcw","ArrowLeft","Zap","Gauge","Leaf","Clock","MapPin","Car","AlertCircle","Square","jsxDEV","_jsxDEV","SimulationDashboard","_s","navigate","isRunning","setIsRunning","currentLap","setCurrentLap","totalLaps","setTotalLaps","simulationTime","setSimulationTime","simulationId","setSimulationId","webSimulationAvailable","setWebSimulationAvailable","simulationFrame","setSimulationFrame","simulationError","setSimulationError","fallbackMode","setFallbackMode","eventSourceRef","simulationData","setSimulationData","ai","lapTime","energyConsumption","co2Saved","speed","throttle","brake","human","config","JSON","parse","localStorage","getItem","track","checkWebSimulationAvailability","response","fetch","ok","data","json","console","log","error","startSimulation","savedSimulationId","startFrameStreaming","method","headers","body","stringify","model_version","user","result","simulation_id","setItem","web_simulation","errorMsg","includes","startMockSimulation","message","progress","interval","setInterval","Math","floor","prev","sin","PI","mockFrame","step","time","position","clearInterval","mockResults","ai_lap_time","ai_lap_time_formatted","hamilton_lap_time","hamilton_lap_time_formatted","time_difference","ai_faster","percentage_difference","current","close","EventSource","onopen","onerror","onmessage","event","current_speed","co2_saved","current_throttle","current_brake","lap_time","energy_consumption","video_frames","length","latestFrame","frameData","frame_data","e","current_frame","status","comparison_data","error_message","pauseSimulation","stopSimulation","resetSimulation","removeItem","formatTime","seconds","mins","secs","toFixed","padStart","_data$comparison_data","className","children","to","size","fileName","_jsxFileName","lineNumber","columnNumber","onClick","style","width","round","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/EcoDrive Simulator/src/pages/SimulationDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { \r\n  Play, \r\n  Pause, \r\n  RotateCcw, \r\n  ArrowLeft,\r\n  Zap,\r\n  Gauge,\r\n  Leaf,\r\n  Clock,\r\n  MapPin,\r\n  Car,\r\n  AlertCircle,\r\n  Square,\r\n} from 'lucide-react';\r\nimport './SimulationDashboard.css';\r\n\r\nconst SimulationDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentLap, setCurrentLap] = useState(0);\r\n  const [totalLaps, setTotalLaps] = useState(3);\r\n  const [simulationTime, setSimulationTime] = useState(0);\r\n  const [simulationId, setSimulationId] = useState(null);\r\n  const [webSimulationAvailable, setWebSimulationAvailable] = useState(false);\r\n  const [simulationFrame, setSimulationFrame] = useState(null);\r\n  const [simulationError, setSimulationError] = useState(null);\r\n  const [fallbackMode, setFallbackMode] = useState(false);\r\n  const eventSourceRef = useRef(null);\r\n  \r\n  // Basic simulation data\r\n  const [simulationData, setSimulationData] = useState({\r\n    ai: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n    },\r\n    human: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Load simulation config\r\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n    if (!config.track) {\r\n      navigate('/simulator');\r\n      return;\r\n    }\r\n\r\n    // Check if web simulation is available\r\n    checkWebSimulationAvailability();\r\n  }, [navigate]);\r\n\r\n  const checkWebSimulationAvailability = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/web-simulation/status');\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        // Web simulation is available if we get a response (even if idle)\r\n        setWebSimulationAvailable(true);\r\n        console.log('Web simulation status:', data);\r\n      }\r\n    } catch (error) {\r\n      console.log('Web simulation not available:', error);\r\n      setWebSimulationAvailable(false);\r\n    }\r\n  };\r\n\r\n  const startSimulation = async () => {\r\n    console.log('Starting simulation...');\r\n    try {\r\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n      const savedSimulationId = localStorage.getItem('simulationId');\r\n      \r\n      console.log('Config:', config);\r\n      console.log('Saved Simulation ID:', savedSimulationId);\r\n      \r\n      if (savedSimulationId) {\r\n        // Use existing simulation ID\r\n        console.log('Resuming existing simulation:', savedSimulationId);\r\n        setSimulationId(savedSimulationId);\r\n        setIsRunning(true);\r\n        setSimulationError(null);\r\n        \r\n        // Start streaming if web simulation is available\r\n        if (webSimulationAvailable) {\r\n          console.log('ðŸ“¡ Starting frame streaming...');\r\n          startFrameStreaming();\r\n        }\r\n      } else {\r\n        // Start new simulation\r\n        console.log('ðŸ†• Starting new simulation...');\r\n        const response = await fetch('http://localhost:5000/api/simulation/start', {\r\n          method: 'POST',\r\n          headers: {\r\n            'Content-Type': 'application/json',\r\n          },\r\n          body: JSON.stringify({\r\n            track: config.track,\r\n            model_version: config.model_version || 'ppo',\r\n            user: 'web_user'\r\n          })\r\n        });\r\n\r\n        const result = await response.json();\r\n        console.log('Simulation start result:', result);\r\n        \r\n        if (result.simulation_id) {\r\n          console.log('Simulation started successfully!');\r\n          setSimulationId(result.simulation_id);\r\n          localStorage.setItem('simulationId', result.simulation_id);\r\n          setIsRunning(true);\r\n          setSimulationError(null);\r\n          \r\n          // If web simulation is available, start streaming frames\r\n          if (result.web_simulation && webSimulationAvailable) {\r\n            console.log('Starting frame streaming...');\r\n            startFrameStreaming();\r\n          }\r\n        } else {\r\n          const errorMsg = result.error || 'Failed to start simulation';\r\n          console.error('Simulation start failed:', errorMsg);\r\n          setSimulationError(errorMsg);\r\n          \r\n          // If F1Tenth is not available, start mock simulation\r\n          if (errorMsg.includes('F1Tenth')) {\r\n            console.log('Starting fallback mock simulation...');\r\n            setFallbackMode(true);\r\n            startMockSimulation();\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to start simulation:', error);\r\n      setSimulationError('Failed to start simulation: ' + error.message);\r\n      \r\n      // Fallback to mock simulation\r\n      console.log('Starting fallback mock simulation due to error...');\r\n      setFallbackMode(true);\r\n      startMockSimulation();\r\n    }\r\n  };\r\n\r\n  const startMockSimulation = () => {\r\n    console.log('Starting mock simulation in fallback mode');\r\n    setIsRunning(true);\r\n    setSimulationError(null);\r\n    \r\n    // Simulate a lap over 90 seconds\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      progress += 0.01; // 1% every 100ms\r\n      const lapTime = progress * 90; // 90 second lap\r\n      \r\n      setSimulationTime(lapTime);\r\n      setCurrentLap(Math.floor(progress * 10));\r\n      \r\n      // Update simulation data\r\n      setSimulationData(prev => ({\r\n        ...prev,\r\n        ai: {\r\n          lapTime: lapTime,\r\n          energyConsumption: lapTime * 0.03,\r\n          co2Saved: lapTime * 0.015,\r\n          speed: 120 + Math.sin(progress * Math.PI) * 40,\r\n          throttle: 60 + Math.sin(progress * Math.PI * 2) * 20,\r\n          brake: 20 + Math.sin(progress * Math.PI * 3) * 15,\r\n        }\r\n      }));\r\n      \r\n      // Add mock frame data\r\n      const mockFrame = {\r\n        step: Math.floor(progress * 1000),\r\n        time: lapTime,\r\n        speed: 120 + Math.sin(progress * Math.PI) * 40,\r\n        position: [progress * 100, Math.sin(progress * Math.PI) * 50],\r\n        progress: progress\r\n      };\r\n      setSimulationFrame(JSON.stringify(mockFrame));\r\n      \r\n      if (progress >= 1.0) {\r\n        clearInterval(interval);\r\n        setIsRunning(false);\r\n        \r\n        // Store mock results\r\n        const mockResults = {\r\n          ai_lap_time: 87.5,\r\n          ai_lap_time_formatted: \"1:27.500\",\r\n          hamilton_lap_time: 89.2,\r\n          hamilton_lap_time_formatted: \"1:29.200\",\r\n          time_difference: -1.7,\r\n          ai_faster: true,\r\n          percentage_difference: -1.9\r\n        };\r\n        localStorage.setItem('simulationResults', JSON.stringify(mockResults));\r\n        \r\n        console.log('Mock simulation completed');\r\n      }\r\n    }, 100);\r\n    \r\n    // Store interval reference for cleanup\r\n    eventSourceRef.current = { close: () => clearInterval(interval) };\r\n  };\r\n\r\n  const startFrameStreaming = () => {\r\n    console.log('ðŸ“¡ Starting frame streaming...');\r\n    if (eventSourceRef.current) {\r\n      eventSourceRef.current.close();\r\n    }\r\n\r\n    eventSourceRef.current = new EventSource('http://localhost:5000/api/web-simulation/stream');\r\n    \r\n    eventSourceRef.current.onopen = () => {\r\n      console.log('EventSource connection opened');\r\n    };\r\n    \r\n    eventSourceRef.current.onerror = (error) => {\r\n      console.error('EventSource error:', error);\r\n    };\r\n    \r\n    eventSourceRef.current.onmessage = (event) => {\r\n      try {\r\n        console.log('Received streaming data:', event.data);\r\n        const data = JSON.parse(event.data);\r\n        \r\n        // Debug: Log key telemetry values\r\n        console.log('Real-time telemetry:', {\r\n          speed: data.current_speed,\r\n          co2_saved: data.co2_saved,\r\n          throttle: data.current_throttle,\r\n          brake: data.current_brake,\r\n          progress: data.progress\r\n        });\r\n        \r\n        // Update simulation data\r\n        setSimulationData(prev => ({\r\n          ...prev,\r\n          ai: {\r\n            lapTime: data.lap_time || 0,\r\n            energyConsumption: data.energy_consumption || 0,\r\n            co2Saved: data.co2_saved || 0, // Use actual COâ‚‚ savings from backend\r\n            speed: data.current_speed || 0,\r\n            throttle: data.current_throttle || 0, // Use actual throttle data\r\n            brake: data.current_brake || 0, // Use actual brake data\r\n            progress: data.progress || 0, // Use actual progress\r\n          },\r\n          human: {\r\n            lapTime: data.hamilton_lap_time || 0,\r\n            energyConsumption: 0,\r\n            co2Saved: 0,\r\n            speed: 0,\r\n            throttle: 0,\r\n            brake: 0,\r\n          }\r\n        }));\r\n        \r\n        // Update simulation time and progress\r\n        setSimulationTime(data.lap_time || 0);\r\n        setCurrentLap(Math.floor((data.progress || 0) * 10)); // Convert progress to lap number\r\n        \r\n        // Update video frame if available\r\n        if (data.video_frames && data.video_frames.length > 0) {\r\n          const latestFrame = data.video_frames[data.video_frames.length - 1];\r\n          try {\r\n            const frameData = JSON.parse(latestFrame);\r\n            if (frameData.frame_data) {\r\n              setSimulationFrame(frameData.frame_data);\r\n            }\r\n          } catch (e) {\r\n            console.log('Error parsing frame data:', e);\r\n          }\r\n        }\r\n        \r\n        // Also check for direct frame data\r\n        if (data.current_frame) {\r\n          setSimulationFrame(data.current_frame);\r\n        }\r\n        \r\n        // Check if simulation completed\r\n        if (data.status === 'completed') {\r\n          setIsRunning(false);\r\n          // Store results for comparison page\r\n          if (data.comparison_data) {\r\n            localStorage.setItem('simulationResults', JSON.stringify(data.comparison_data));\r\n          }\r\n        } else if (data.status === 'error') {\r\n          setIsRunning(false);\r\n          setSimulationError(data.error_message || 'Simulation error occurred');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error parsing stream data:', error);\r\n      }\r\n    };\r\n\r\n    eventSourceRef.current.onerror = (error) => {\r\n      console.error('EventSource error:', error);\r\n      setSimulationError('Connection to simulation lost');\r\n    };\r\n  };\r\n\r\n  const pauseSimulation = async () => {\r\n    setIsRunning(false);\r\n    // TODO: Implement pause functionality\r\n  };\r\n\r\n  const stopSimulation = async () => {\r\n    try {\r\n      console.log('Stopping simulation...');\r\n      \r\n      // Stop web simulation if available\r\n      if (webSimulationAvailable) {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/web-simulation/stop', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json',\r\n            }\r\n          });\r\n          \r\n          if (response.ok) {\r\n            console.log('Web simulation stopped successfully');\r\n          } else {\r\n            console.error('Failed to stop web simulation');\r\n          }\r\n        } catch (error) {\r\n          console.error('Error stopping web simulation:', error);\r\n        }\r\n      }\r\n      \r\n      // Close EventSource connection\r\n      if (eventSourceRef.current) {\r\n        eventSourceRef.current.close();\r\n        eventSourceRef.current = null;\r\n        console.log('EventSource connection closed');\r\n      }\r\n      \r\n      // Update UI state\r\n      setIsRunning(false);\r\n      setSimulationError(null);\r\n      console.log('Simulation stopped');\r\n      \r\n    } catch (error) {\r\n      console.error('Error stopping simulation:', error);\r\n      setIsRunning(false);\r\n    }\r\n  };\r\n\r\n  const resetSimulation = async () => {\r\n    try {\r\n      console.log('Resetting simulation...');\r\n      \r\n      // Stop current simulation first\r\n      await stopSimulation();\r\n      \r\n      // Clear all simulation data\r\n      setIsRunning(false);\r\n      setSimulationTime(0);\r\n      setCurrentLap(0);\r\n      setSimulationId(null);\r\n      setSimulationFrame(null);\r\n      setSimulationError(null);\r\n      setFallbackMode(false);\r\n      \r\n      // Reset simulation data\r\n      setSimulationData({\r\n        ai: {\r\n          lapTime: 0,\r\n          energyConsumption: 0,\r\n          co2Saved: 0,\r\n          speed: 0,\r\n          throttle: 0,\r\n          brake: 0,\r\n        },\r\n        human: {\r\n          lapTime: 0,\r\n          energyConsumption: 0,\r\n          co2Saved: 0,\r\n          speed: 0,\r\n          throttle: 0,\r\n          brake: 0,\r\n        }\r\n      });\r\n      \r\n      // Clear localStorage\r\n      localStorage.removeItem('simulationId');\r\n      localStorage.removeItem('simulationResults');\r\n      localStorage.removeItem('simulationConfig');\r\n      \r\n      console.log('Simulation reset complete');\r\n      \r\n    } catch (error) {\r\n      console.error('Error resetting simulation:', error);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = (seconds % 60).toFixed(1);\r\n    return `${mins}:${secs.padStart(4, '0')}`;\r\n  };\r\n\r\n  // Poll for simulation updates when running\r\n  useEffect(() => {\r\n    let interval;\r\n    if (isRunning && webSimulationAvailable) {\r\n      interval = setInterval(async () => {\r\n        try {\r\n          const response = await fetch('http://localhost:5000/api/web-simulation/status');\r\n          if (response.ok) {\r\n            const data = await response.json();\r\n            \r\n            // Update simulation data\r\n            setSimulationData(prev => ({\r\n              ...prev,\r\n              ai: {\r\n                lapTime: data.lap_time || 0,\r\n                energyConsumption: data.energy_consumption || 0,\r\n                co2Saved: data.co2_saved || 0, // Use actual COâ‚‚ savings from backend\r\n                speed: data.current_speed || 0, // This now shows F1-scaled speeds\r\n                throttle: 0,\r\n                brake: 0,\r\n              },\r\n              human: {\r\n                lapTime: data.comparison_data?.hamilton_lap_time || 0,\r\n                energyConsumption: 0,\r\n                co2Saved: 0,\r\n                speed: 0,\r\n                throttle: 0,\r\n                brake: 0,\r\n              }\r\n            }));\r\n            \r\n            // Update simulation time\r\n            setSimulationTime(data.lap_time || 0);\r\n            \r\n            // Update video frame - simple and smooth\r\n            if (data.video_frames && data.video_frames.length > 0) {\r\n              const latestFrame = data.video_frames[data.video_frames.length - 1];\r\n              try {\r\n                const frameData = JSON.parse(latestFrame);\r\n                if (frameData.frame_data) {\r\n                  setSimulationFrame(frameData.frame_data);\r\n                }\r\n              } catch (e) {\r\n                console.log('Error parsing frame data:', e);\r\n              }\r\n            }\r\n            \r\n            // Also check for direct frame data\r\n            if (data.current_frame) {\r\n              setSimulationFrame(data.current_frame);\r\n            }\r\n            \r\n            // Check if simulation completed\r\n            if (data.status === 'completed' || data.status === 'error') {\r\n              setIsRunning(false);\r\n              if (data.status === 'error') {\r\n                setSimulationError(data.error || 'Simulation error occurred');\r\n              }\r\n            }\r\n          }\r\n        } catch (error) {\r\n          console.error('Failed to fetch simulation status:', error);\r\n        }\r\n      }, 100); // Poll every 500ms for much smoother updates\r\n    }\r\n    \r\n    return () => {\r\n      if (interval) {\r\n        clearInterval(interval);\r\n      }\r\n    };\r\n  }, [isRunning, webSimulationAvailable]);\r\n\r\n  // Cleanup on unmount\r\n  useEffect(() => {\r\n    return () => {\r\n      if (eventSourceRef.current) {\r\n        eventSourceRef.current.close();\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"simulation-dashboard\">\r\n      <div className=\"dashboard-container\">\r\n        {/* Header */}\r\n        <div className=\"dashboard-header\">\r\n          <div className=\"header-left\">\r\n            <Link to=\"/simulator\" className=\"back-button\">\r\n              <ArrowLeft size={20} />\r\n              Back to Setup\r\n            </Link>\r\n            <div className=\"simulation-info\">\r\n              <h1>Live Simulation</h1>\r\n              <div className=\"simulation-meta\">\r\n                <span><MapPin size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track'}</span>\r\n                <span><Car size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').model_version || 'PPO'} Model</span>\r\n                <span><Clock size={16} /> {formatTime(simulationTime)}</span>\r\n                {webSimulationAvailable && (\r\n                  <span className=\"web-simulation-badge\">Web Simulation</span>\r\n                )}\r\n                {fallbackMode && (\r\n                  <span className=\"fallback-badge\">Mock Simulation</span>\r\n                )}\r\n                {simulationError && (\r\n                  <span className=\"error-badge\">Error: {simulationError}</span>\r\n                )}\r\n                {!isRunning && !simulationError && (\r\n                  <span className=\"status-badge\">Ready to Start</span>\r\n                )}\r\n                {isRunning && (\r\n                  <span className=\"status-badge running\">Running...</span>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"header-controls\">\r\n            <button \r\n              className={`control-btn ${isRunning ? 'pause' : 'play'}`}\r\n              onClick={isRunning ? pauseSimulation : startSimulation}\r\n            >\r\n              {isRunning ? <Pause size={20} /> : <Play size={20} />}\r\n              {isRunning ? 'Pause' : 'Start'}\r\n            </button>\r\n            {isRunning && (\r\n              <button className=\"control-btn stop\" onClick={stopSimulation}>\r\n                <Square size={20} />\r\n                Stop\r\n              </button>\r\n            )}\r\n            <button className=\"control-btn reset\" onClick={resetSimulation}>\r\n              <RotateCcw size={20} />\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Error Display */}\r\n        {simulationError && (\r\n          <div className=\"error-alert\">\r\n            <AlertCircle size={20} />\r\n            <span>{simulationError}</span>\r\n          </div>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <div className=\"progress-section\">\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${simulationData.ai.progress * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"progress-info\">\r\n            <span>Lap Progress: {Math.round(simulationData.ai.progress * 100)}%</span>\r\n            <span>{formatTime(simulationTime)}</span>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"dashboard-content\">\r\n          {/* Video Panel */}\r\n          <div className=\"video-panel\">\r\n            <div className=\"video-container\">\r\n              <h3>Live Simulation</h3>\r\n              <div className=\"video-frame\">\r\n                {simulationFrame ? (\r\n                  <img \r\n                    src={simulationFrame} \r\n                    alt=\"Simulation\" \r\n                    className=\"simulation-image\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"video-placeholder\">\r\n                    <Car size={48} />\r\n                    <p>{isRunning ? 'Simulation Running...' : 'No simulation active'}</p>\r\n                    {fallbackMode && (\r\n                      <small>Running in mock simulation mode</small>\r\n                    )}\r\n                    {!webSimulationAvailable && !fallbackMode && (\r\n                      <small>Web simulation not available - using mock data</small>\r\n                    )}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          {/* Metrics Panel */}\r\n          <div className=\"metrics-panel\">\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Zap size={20} />\r\n                <span>AI Performance</span>\r\n              </div>\r\n              <div className=\"metric-value\">{formatTime(simulationData.ai.lapTime)}</div>\r\n              <div className=\"metric-label\">Lap Time</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Gauge size={20} />\r\n                <span>F1 Speed</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.speed.toFixed(1)}</div>\r\n              <div className=\"metric-label\">km/h</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Leaf size={20} />\r\n                <span>COâ‚‚ Savings</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.co2Saved.toFixed(3)}</div>\r\n              <div className=\"metric-label\">kg COâ‚‚ Saved</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}