{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hp\\\\Desktop\\\\EcoDrive Simulator\\\\frontend and backend\\\\src\\\\pages\\\\SimulationDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { motion } from 'framer-motion';\nimport io from 'socket.io-client';\nimport { Play, Pause, RotateCcw, ArrowLeft, Zap, Gauge, Leaf, TrendingUp, Clock, MapPin, Car, BarChart3, Activity, Target, AlertCircle } from 'lucide-react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts';\nimport './SimulationDashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SimulationDashboard = () => {\n  _s();\n  const navigate = useNavigate();\n  const socketRef = useRef(null);\n  const [isRunning, setIsRunning] = useState(false);\n  const [currentLap, setCurrentLap] = useState(0);\n  const [totalLaps, setTotalLaps] = useState(3);\n  const [simulationTime, setSimulationTime] = useState(0);\n  const [activeTab, setActiveTab] = useState('telemetry');\n  const [simulationId, setSimulationId] = useState(null);\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\n  const [selectedModel, setSelectedModel] = useState('ppo');\n  const [videoStreaming, setVideoStreaming] = useState(false);\n  const [videoError, setVideoError] = useState(null);\n\n  // Real simulation data\n  const [simulationData, setSimulationData] = useState({\n    ai: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0,\n      position: {\n        x: 0,\n        y: 0\n      },\n      steering: 0\n    },\n    human: {\n      lapTime: 0,\n      energyConsumption: 0,\n      co2Saved: 0,\n      speed: 0,\n      throttle: 0,\n      brake: 0,\n      position: {\n        x: 0,\n        y: 0\n      },\n      steering: 0\n    }\n  });\n\n  // Real telemetry data\n  const [telemetryData, setTelemetryData] = useState([]);\n  const [availableModels, setAvailableModels] = useState({});\n  const [availableTracks, setAvailableTracks] = useState([]);\n  const initializeSocket = () => {\n    socketRef.current = io('http://localhost:5000');\n    socketRef.current.on('connect', () => {\n      console.log('Connected to simulation server');\n      setConnectionStatus('connected');\n    });\n    socketRef.current.on('disconnect', () => {\n      console.log('Disconnected from simulation server');\n      setConnectionStatus('disconnected');\n    });\n    socketRef.current.on('telemetry_data', data => {\n      updateSimulationData(data);\n    });\n    socketRef.current.on('status', data => {\n      console.log('Server status:', data);\n    });\n  };\n  useEffect(() => {\n    // Load simulation config\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n    if (!config.track) {\n      navigate('/simulator');\n      return;\n    }\n\n    // Initialize WebSocket connection\n    initializeSocket();\n\n    // Load available models and tracks\n    loadSystemData();\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n      }\n    };\n  }, [navigate]);\n  const loadSystemData = async () => {\n    try {\n      const [modelsResponse, tracksResponse] = await Promise.all([fetch('http://localhost:5000/api/models'), fetch('http://localhost:5000/api/tracks')]);\n      const models = await modelsResponse.json();\n      const tracks = await tracksResponse.json();\n      setAvailableModels(models);\n      setAvailableTracks(tracks);\n    } catch (error) {\n      console.error('Failed to load system data:', error);\n    }\n  };\n  const updateSimulationData = data => {\n    if (data && data.data && data.data.length > 0) {\n      const latestData = data.data[data.data.length - 1];\n      setSimulationData(prev => ({\n        ai: {\n          ...prev.ai,\n          lapTime: latestData.lap_time || 0,\n          speed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\n          // Convert to km/h\n          throttle: Math.max(0, latestData.action.speed),\n          brake: Math.max(0, -latestData.action.speed),\n          steering: latestData.action.steering,\n          position: {\n            x: latestData.position.x,\n            y: latestData.position.y\n          }\n        },\n        human: {\n          ...prev.human,\n          lapTime: latestData.lap_time || 0,\n          speed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\n          throttle: Math.max(0, latestData.action.speed),\n          brake: Math.max(0, -latestData.action.speed),\n          steering: latestData.action.steering,\n          position: {\n            x: latestData.position.x,\n            y: latestData.position.y\n          }\n        }\n      }));\n\n      // Update telemetry data\n      setTelemetryData(prev => {\n        const newData = [...prev, {\n          time: latestData.timestamp,\n          aiSpeed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\n          humanSpeed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\n          aiThrottle: Math.max(0, latestData.action.speed),\n          humanThrottle: Math.max(0, latestData.action.speed),\n          aiBrake: Math.max(0, -latestData.action.speed),\n          humanBrake: Math.max(0, -latestData.action.speed),\n          aiSteering: latestData.action.steering,\n          humanSteering: latestData.action.steering,\n          aiEnergy: latestData.timestamp * 0.5,\n          humanEnergy: latestData.timestamp * 0.7,\n          reward: latestData.reward\n        }];\n\n        // Keep only last 100 data points\n        return newData.slice(-100);\n      });\n      setSimulationTime(latestData.timestamp);\n    }\n  };\n  const startSimulation = async () => {\n    try {\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\n      const response = await fetch('http://localhost:5000/api/simulation/start', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          track: config.track,\n          driving_mode: config.driving_mode || 'eco',\n          weather: config.weather || 'clear',\n          surface: config.surface || 'dry',\n          model_version: selectedModel\n        })\n      });\n      const result = await response.json();\n      if (result.simulation_id) {\n        setSimulationId(result.simulation_id);\n        setIsRunning(true);\n\n        // Subscribe to simulation updates\n        socketRef.current.emit('subscribe_simulation', {\n          simulation_id: result.simulation_id\n        });\n\n        // Start polling for simulation data\n        const pollInterval = setInterval(async () => {\n          try {\n            const dataResponse = await fetch(`http://localhost:5000/api/simulation/${result.simulation_id}/data`);\n            const data = await dataResponse.json();\n            updateSimulationData(data);\n            if (data.status === 'completed' || data.status === 'error') {\n              clearInterval(pollInterval);\n              setIsRunning(false);\n            }\n          } catch (error) {\n            console.error('Failed to fetch simulation data:', error);\n          }\n        }, 100); // Poll every 100ms\n\n        // Start video streaming\n        setVideoStreaming(true);\n        setVideoError(null);\n\n        // Store intervals for cleanup\n        window.simulationPollInterval = pollInterval;\n      } else {\n        console.error('Failed to start simulation:', result.error);\n      }\n    } catch (error) {\n      console.error('Failed to start simulation:', error);\n    }\n  };\n  const pauseSimulation = () => {\n    setIsRunning(false);\n    if (window.simulationPollInterval) {\n      clearInterval(window.simulationPollInterval);\n    }\n  };\n  const resetSimulation = async () => {\n    if (simulationId) {\n      try {\n        await fetch(`http://localhost:5000/api/simulation/${simulationId}/stop`, {\n          method: 'POST'\n        });\n      } catch (error) {\n        console.error('Failed to stop simulation:', error);\n      }\n    }\n    setIsRunning(false);\n    setSimulationTime(0);\n    setCurrentLap(0);\n    setTelemetryData([]);\n    setSimulationId(null);\n    setVideoStreaming(false);\n    setVideoError(null);\n    if (window.simulationPollInterval) {\n      clearInterval(window.simulationPollInterval);\n    }\n  };\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60);\n    const secs = (seconds % 60).toFixed(1);\n    return `${mins}:${secs.padStart(4, '0')}`;\n  };\n  const tabs = [{\n    id: 'telemetry',\n    label: 'Live Telemetry',\n    icon: Activity\n  }, {\n    id: 'performance',\n    label: 'Performance',\n    icon: TrendingUp\n  }, {\n    id: 'insights',\n    label: 'Model Insights',\n    icon: BarChart3\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"simulation-dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-container\",\n      children: [/*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"dashboard-header\",\n        initial: {\n          opacity: 0,\n          y: -20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-left\",\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: \"/simulator\",\n            className: \"back-button\",\n            children: [/*#__PURE__*/_jsxDEV(ArrowLeft, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), \"Back to Setup\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"simulation-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"simulation-meta\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(MapPin, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 23\n                }, this), \" \", JSON.parse(localStorage.getItem('simulationConfig') || '{}').driving_mode || 'Eco', \" Mode\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 305,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [/*#__PURE__*/_jsxDEV(Clock, {\n                  size: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 23\n                }, this), \" \", formatTime(simulationTime)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `connection-status ${connectionStatus}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `status-dot ${connectionStatus}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 19\n                }, this), connectionStatus === 'connected' ? 'Connected' : 'Disconnected']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-controls\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"model-selector\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"model-select\",\n              children: \"Model:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              id: \"model-select\",\n              value: selectedModel,\n              onChange: e => setSelectedModel(e.target.value),\n              disabled: isRunning,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"ppo\",\n                children: \"PPO (Proximal Policy Optimization)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 324,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"sac\",\n                children: \"SAC (Soft Actor-Critic)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: `control-btn ${isRunning ? 'pause' : 'play'}`,\n            onClick: isRunning ? pauseSimulation : startSimulation,\n            disabled: connectionStatus !== 'connected',\n            children: [isRunning ? /*#__PURE__*/_jsxDEV(Pause, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 28\n            }, this) : /*#__PURE__*/_jsxDEV(Play, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 333,\n              columnNumber: 50\n            }, this), isRunning ? 'Pause' : 'Start']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"control-btn reset\",\n            onClick: resetSimulation,\n            children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n              size: 20\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 337,\n              columnNumber: 15\n            }, this), \"Reset\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), connectionStatus !== 'connected' && /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"connection-alert\",\n        initial: {\n          opacity: 0,\n          y: -10\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n          size: 16\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Not connected to simulation server. Please ensure the backend is running.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n        className: \"progress-section\",\n        initial: {\n          opacity: 0,\n          y: 20\n        },\n        animate: {\n          opacity: 1,\n          y: 0\n        },\n        transition: {\n          duration: 0.5,\n          delay: 0.1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-bar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"progress-fill\",\n            style: {\n              width: `${currentLap / totalLaps * 100}%`\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 363,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"progress-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"Lap \", currentLap, \" of \", totalLaps]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: formatTime(simulationTime)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-content\",\n        children: [/*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"video-panel\",\n          initial: {\n            opacity: 0,\n            y: 20\n          },\n          animate: {\n            opacity: 1,\n            y: 0\n          },\n          transition: {\n            duration: 0.5,\n            delay: 0.2\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"video-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Live Simulation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-frame\",\n              children: videoError ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-error\",\n                children: [/*#__PURE__*/_jsxDEV(AlertCircle, {\n                  size: 48\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: videoError\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 19\n              }, this) : simulationId && videoStreaming ? /*#__PURE__*/_jsxDEV(\"img\", {\n                src: `http://localhost:5000/api/simulation/${simulationId}/video_feed`,\n                alt: \"Simulation Video\",\n                className: \"simulation-video\",\n                onError: () => setVideoError('Failed to load video stream'),\n                onLoad: () => setVideoError(null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 19\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"video-placeholder\",\n                children: [/*#__PURE__*/_jsxDEV(Car, {\n                  size: 48\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: videoStreaming ? 'Waiting for video...' : 'No video stream'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"video-controls\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: `streaming-indicator ${videoStreaming ? 'active' : 'inactive'}`,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `indicator-dot ${videoStreaming ? 'active' : 'inactive'}`\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 408,\n                  columnNumber: 19\n                }, this), videoStreaming ? 'Streaming' : 'Not Streaming']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 407,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 383,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 377,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"metrics-panel\",\n          initial: {\n            opacity: 0,\n            x: -20\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.5,\n            delay: 0.3\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Zap, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 424,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"AI Performance\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 423,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: formatTime(simulationData.ai.lapTime)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"Lap Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Gauge, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 433,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Speed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 434,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.speed.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"km/h\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 431,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Leaf, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 442,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Energy Saved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 443,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 441,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: simulationData.ai.co2Saved.toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 445,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"CO\\u2082 Saved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 446,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 440,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"metric-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-header\",\n              children: [/*#__PURE__*/_jsxDEV(Target, {\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 451,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Steering\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 452,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 450,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-value\",\n              children: (simulationData.ai.steering * 180 / Math.PI).toFixed(1)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 454,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"metric-label\",\n              children: \"degrees\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 455,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 449,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(motion.div, {\n          className: \"charts-panel\",\n          initial: {\n            opacity: 0,\n            x: 20\n          },\n          animate: {\n            opacity: 1,\n            x: 0\n          },\n          transition: {\n            duration: 0.5,\n            delay: 0.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-navigation\",\n            children: tabs.map(tab => /*#__PURE__*/_jsxDEV(\"button\", {\n              className: `tab-btn ${activeTab === tab.id ? 'active' : ''}`,\n              onClick: () => setActiveTab(tab.id),\n              children: [/*#__PURE__*/_jsxDEV(tab.icon, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 19\n              }, this), tab.label]\n            }, tab.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 469,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 467,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"tab-content\",\n            children: [activeTab === 'telemetry' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Live Telemetry\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(LineChart, {\n                  data: telemetryData,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 490,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"aiSpeed\",\n                    stroke: \"#00ff88\",\n                    strokeWidth: 2,\n                    name: \"AI Speed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 491,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Line, {\n                    type: \"monotone\",\n                    dataKey: \"humanSpeed\",\n                    stroke: \"#ff6b6b\",\n                    strokeWidth: 2,\n                    name: \"Human Speed\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 492,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 486,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 485,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 17\n            }, this), activeTab === 'performance' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"chart-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Performance Metrics\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 500,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n                width: \"100%\",\n                height: 300,\n                children: /*#__PURE__*/_jsxDEV(AreaChart, {\n                  data: telemetryData,\n                  children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                    strokeDasharray: \"3 3\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                    dataKey: \"time\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 505,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 506,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"aiEnergy\",\n                    stackId: \"1\",\n                    stroke: \"#00ff88\",\n                    fill: \"#00ff88\",\n                    fillOpacity: 0.6,\n                    name: \"AI Energy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 507,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Area, {\n                    type: \"monotone\",\n                    dataKey: \"humanEnergy\",\n                    stackId: \"1\",\n                    stroke: \"#ff6b6b\",\n                    fill: \"#ff6b6b\",\n                    fillOpacity: 0.6,\n                    name: \"Human Energy\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 508,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 499,\n              columnNumber: 17\n            }, this), activeTab === 'insights' && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"insights-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                children: \"Model Insights\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"insights-grid\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"insight-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"Available Models\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 519,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"model-list\",\n                    children: Object.entries(availableModels).map(([key, model]) => /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: `model-item ${model.status}`,\n                      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"model-name\",\n                        children: key.toUpperCase()\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 29\n                      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: \"model-status\",\n                        children: model.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 524,\n                        columnNumber: 29\n                      }, this)]\n                    }, key, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 522,\n                      columnNumber: 27\n                    }, this))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 520,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 518,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"insight-card\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                    children: \"System Status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 530,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"status-info\",\n                    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Connection: \", connectionStatus]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Simulation ID: \", simulationId || 'None']\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 533,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\"Data Points: \", telemetryData.length]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 534,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 531,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 529,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 517,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 515,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 481,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 375,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 287,\n    columnNumber: 5\n  }, this);\n};\n_s(SimulationDashboard, \"2phjG2/96CGYAzFiZZM4g5xEDfk=\", false, function () {\n  return [useNavigate];\n});\n_c = SimulationDashboard;\nexport default SimulationDashboard;\nvar _c;\n$RefreshReg$(_c, \"SimulationDashboard\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Link","useNavigate","motion","io","Play","Pause","RotateCcw","ArrowLeft","Zap","Gauge","Leaf","TrendingUp","Clock","MapPin","Car","BarChart3","Activity","Target","AlertCircle","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","ResponsiveContainer","AreaChart","Area","jsxDEV","_jsxDEV","SimulationDashboard","_s","navigate","socketRef","isRunning","setIsRunning","currentLap","setCurrentLap","totalLaps","setTotalLaps","simulationTime","setSimulationTime","activeTab","setActiveTab","simulationId","setSimulationId","connectionStatus","setConnectionStatus","selectedModel","setSelectedModel","videoStreaming","setVideoStreaming","videoError","setVideoError","simulationData","setSimulationData","ai","lapTime","energyConsumption","co2Saved","speed","throttle","brake","position","x","y","steering","human","telemetryData","setTelemetryData","availableModels","setAvailableModels","availableTracks","setAvailableTracks","initializeSocket","current","on","console","log","data","updateSimulationData","config","JSON","parse","localStorage","getItem","track","loadSystemData","disconnect","modelsResponse","tracksResponse","Promise","all","fetch","models","json","tracks","error","length","latestData","prev","lap_time","Math","sqrt","velocity","max","action","newData","time","timestamp","aiSpeed","humanSpeed","aiThrottle","humanThrottle","aiBrake","humanBrake","aiSteering","humanSteering","aiEnergy","humanEnergy","reward","slice","startSimulation","response","method","headers","body","stringify","driving_mode","weather","surface","model_version","result","simulation_id","emit","pollInterval","setInterval","dataResponse","status","clearInterval","window","simulationPollInterval","pauseSimulation","resetSimulation","formatTime","seconds","mins","floor","secs","toFixed","padStart","tabs","id","label","icon","className","children","div","initial","opacity","animate","transition","duration","to","size","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","value","onChange","e","target","disabled","onClick","delay","style","width","src","alt","onError","onLoad","PI","map","tab","height","strokeDasharray","dataKey","type","stroke","strokeWidth","name","stackId","fill","fillOpacity","Object","entries","key","model","toUpperCase","_c","$RefreshReg$"],"sources":["C:/Users/Hp/Desktop/EcoDrive Simulator/frontend and backend/src/pages/SimulationDashboard.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\nimport io from 'socket.io-client';\r\nimport { \r\n  Play, \r\n  Pause, \r\n  RotateCcw, \r\n  ArrowLeft,\r\n  Zap,\r\n  Gauge,\r\n  Leaf,\r\n  TrendingUp,\r\n  Clock,\r\n  MapPin,\r\n  Car,\r\n  BarChart3,\r\n  Activity,\r\n  Target,\r\n  AlertCircle,\r\n} from 'lucide-react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, AreaChart, Area } from 'recharts';\r\nimport './SimulationDashboard.css';\r\n\r\nconst SimulationDashboard = () => {\r\n  const navigate = useNavigate();\r\n  const socketRef = useRef(null);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [currentLap, setCurrentLap] = useState(0);\r\n  const [totalLaps, setTotalLaps] = useState(3);\r\n  const [simulationTime, setSimulationTime] = useState(0);\r\n  const [activeTab, setActiveTab] = useState('telemetry');\r\n  const [simulationId, setSimulationId] = useState(null);\r\n  const [connectionStatus, setConnectionStatus] = useState('disconnected');\r\n  const [selectedModel, setSelectedModel] = useState('ppo');\r\n  const [videoStreaming, setVideoStreaming] = useState(false);\r\n  const [videoError, setVideoError] = useState(null);\r\n  \r\n  // Real simulation data\r\n  const [simulationData, setSimulationData] = useState({\r\n    ai: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n      position: { x: 0, y: 0 },\r\n      steering: 0\r\n    },\r\n    human: {\r\n      lapTime: 0,\r\n      energyConsumption: 0,\r\n      co2Saved: 0,\r\n      speed: 0,\r\n      throttle: 0,\r\n      brake: 0,\r\n      position: { x: 0, y: 0 },\r\n      steering: 0\r\n    }\r\n  });\r\n\r\n  // Real telemetry data\r\n  const [telemetryData, setTelemetryData] = useState([]);\r\n  const [availableModels, setAvailableModels] = useState({});\r\n  const [availableTracks, setAvailableTracks] = useState([]);\r\n\r\n  const initializeSocket = () => {\r\n    socketRef.current = io('http://localhost:5000');\r\n    \r\n    socketRef.current.on('connect', () => {\r\n      console.log('Connected to simulation server');\r\n      setConnectionStatus('connected');\r\n    });\r\n\r\n    socketRef.current.on('disconnect', () => {\r\n      console.log('Disconnected from simulation server');\r\n      setConnectionStatus('disconnected');\r\n    });\r\n\r\n    socketRef.current.on('telemetry_data', (data) => {\r\n      updateSimulationData(data);\r\n    });\r\n\r\n    socketRef.current.on('status', (data) => {\r\n      console.log('Server status:', data);\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load simulation config\r\n    const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n    if (!config.track) {\r\n      navigate('/simulator');\r\n      return;\r\n    }\r\n\r\n    // Initialize WebSocket connection\r\n    initializeSocket();\r\n    \r\n    // Load available models and tracks\r\n    loadSystemData();\r\n\r\n    return () => {\r\n      if (socketRef.current) {\r\n        socketRef.current.disconnect();\r\n      }\r\n    };\r\n  }, [navigate]);\r\n\r\n  const loadSystemData = async () => {\r\n    try {\r\n      const [modelsResponse, tracksResponse] = await Promise.all([\r\n        fetch('http://localhost:5000/api/models'),\r\n        fetch('http://localhost:5000/api/tracks')\r\n      ]);\r\n      \r\n      const models = await modelsResponse.json();\r\n      const tracks = await tracksResponse.json();\r\n      \r\n      setAvailableModels(models);\r\n      setAvailableTracks(tracks);\r\n    } catch (error) {\r\n      console.error('Failed to load system data:', error);\r\n    }\r\n  };\r\n\r\n  const updateSimulationData = (data) => {\r\n    if (data && data.data && data.data.length > 0) {\r\n      const latestData = data.data[data.data.length - 1];\r\n      \r\n      setSimulationData(prev => ({\r\n        ai: {\r\n          ...prev.ai,\r\n          lapTime: latestData.lap_time || 0,\r\n          speed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6, // Convert to km/h\r\n          throttle: Math.max(0, latestData.action.speed),\r\n          brake: Math.max(0, -latestData.action.speed),\r\n          steering: latestData.action.steering,\r\n          position: {\r\n            x: latestData.position.x,\r\n            y: latestData.position.y\r\n          }\r\n        },\r\n        human: {\r\n          ...prev.human,\r\n          lapTime: latestData.lap_time || 0,\r\n          speed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\r\n          throttle: Math.max(0, latestData.action.speed),\r\n          brake: Math.max(0, -latestData.action.speed),\r\n          steering: latestData.action.steering,\r\n          position: {\r\n            x: latestData.position.x,\r\n            y: latestData.position.y\r\n          }\r\n        }\r\n      }));\r\n\r\n      // Update telemetry data\r\n      setTelemetryData(prev => {\r\n        const newData = [...prev, {\r\n          time: latestData.timestamp,\r\n          aiSpeed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\r\n          humanSpeed: Math.sqrt(latestData.velocity.x ** 2 + latestData.velocity.y ** 2) * 3.6,\r\n          aiThrottle: Math.max(0, latestData.action.speed),\r\n          humanThrottle: Math.max(0, latestData.action.speed),\r\n          aiBrake: Math.max(0, -latestData.action.speed),\r\n          humanBrake: Math.max(0, -latestData.action.speed),\r\n          aiSteering: latestData.action.steering,\r\n          humanSteering: latestData.action.steering,\r\n          aiEnergy: latestData.timestamp * 0.5,\r\n          humanEnergy: latestData.timestamp * 0.7,\r\n          reward: latestData.reward\r\n        }];\r\n        \r\n        // Keep only last 100 data points\r\n        return newData.slice(-100);\r\n      });\r\n\r\n      setSimulationTime(latestData.timestamp);\r\n    }\r\n  };\r\n\r\n  const startSimulation = async () => {\r\n    try {\r\n      const config = JSON.parse(localStorage.getItem('simulationConfig') || '{}');\r\n      \r\n      const response = await fetch('http://localhost:5000/api/simulation/start', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          track: config.track,\r\n          driving_mode: config.driving_mode || 'eco',\r\n          weather: config.weather || 'clear',\r\n          surface: config.surface || 'dry',\r\n          model_version: selectedModel\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.simulation_id) {\r\n        setSimulationId(result.simulation_id);\r\n        setIsRunning(true);\r\n        \r\n        // Subscribe to simulation updates\r\n        socketRef.current.emit('subscribe_simulation', {\r\n          simulation_id: result.simulation_id\r\n        });\r\n\r\n        // Start polling for simulation data\r\n        const pollInterval = setInterval(async () => {\r\n          try {\r\n            const dataResponse = await fetch(`http://localhost:5000/api/simulation/${result.simulation_id}/data`);\r\n            const data = await dataResponse.json();\r\n            updateSimulationData(data);\r\n            \r\n            if (data.status === 'completed' || data.status === 'error') {\r\n              clearInterval(pollInterval);\r\n              setIsRunning(false);\r\n            }\r\n          } catch (error) {\r\n            console.error('Failed to fetch simulation data:', error);\r\n          }\r\n        }, 100); // Poll every 100ms\r\n\r\n        // Start video streaming\r\n        setVideoStreaming(true);\r\n        setVideoError(null);\r\n\r\n        // Store intervals for cleanup\r\n        window.simulationPollInterval = pollInterval;\r\n      } else {\r\n        console.error('Failed to start simulation:', result.error);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to start simulation:', error);\r\n    }\r\n  };\r\n\r\n  const pauseSimulation = () => {\r\n    setIsRunning(false);\r\n    if (window.simulationPollInterval) {\r\n      clearInterval(window.simulationPollInterval);\r\n    }\r\n  };\r\n\r\n  const resetSimulation = async () => {\r\n    if (simulationId) {\r\n      try {\r\n        await fetch(`http://localhost:5000/api/simulation/${simulationId}/stop`, {\r\n          method: 'POST'\r\n        });\r\n      } catch (error) {\r\n        console.error('Failed to stop simulation:', error);\r\n      }\r\n    }\r\n    \r\n    setIsRunning(false);\r\n    setSimulationTime(0);\r\n    setCurrentLap(0);\r\n    setTelemetryData([]);\r\n    setSimulationId(null);\r\n    setVideoStreaming(false);\r\n    setVideoError(null);\r\n    \r\n    if (window.simulationPollInterval) {\r\n      clearInterval(window.simulationPollInterval);\r\n    }\r\n  };\r\n\r\n  const formatTime = (seconds) => {\r\n    const mins = Math.floor(seconds / 60);\r\n    const secs = (seconds % 60).toFixed(1);\r\n    return `${mins}:${secs.padStart(4, '0')}`;\r\n  };\r\n\r\n  const tabs = [\r\n    { id: 'telemetry', label: 'Live Telemetry', icon: Activity },\r\n    { id: 'performance', label: 'Performance', icon: TrendingUp },\r\n    { id: 'insights', label: 'Model Insights', icon: BarChart3 }\r\n  ];\r\n\r\n  return (\r\n    <div className=\"simulation-dashboard\">\r\n      <div className=\"dashboard-container\">\r\n        {/* Header */}\r\n        <motion.div \r\n          className=\"dashboard-header\"\r\n          initial={{ opacity: 0, y: -20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n        >\r\n          <div className=\"header-left\">\r\n            <Link to=\"/simulator\" className=\"back-button\">\r\n              <ArrowLeft size={20} />\r\n              Back to Setup\r\n            </Link>\r\n            <div className=\"simulation-info\">\r\n              <h1>Live Simulation</h1>\r\n              <div className=\"simulation-meta\">\r\n                <span><MapPin size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').track || 'Unknown Track'}</span>\r\n                <span><Car size={16} /> {JSON.parse(localStorage.getItem('simulationConfig') || '{}').driving_mode || 'Eco'} Mode</span>\r\n                <span><Clock size={16} /> {formatTime(simulationTime)}</span>\r\n                <span className={`connection-status ${connectionStatus}`}>\r\n                  <div className={`status-dot ${connectionStatus}`}></div>\r\n                  {connectionStatus === 'connected' ? 'Connected' : 'Disconnected'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"header-controls\">\r\n            <div className=\"model-selector\">\r\n              <label htmlFor=\"model-select\">Model:</label>\r\n              <select \r\n                id=\"model-select\"\r\n                value={selectedModel} \r\n                onChange={(e) => setSelectedModel(e.target.value)}\r\n                disabled={isRunning}\r\n              >\r\n                <option value=\"ppo\">PPO (Proximal Policy Optimization)</option>\r\n                <option value=\"sac\">SAC (Soft Actor-Critic)</option>\r\n              </select>\r\n            </div>\r\n            <button \r\n              className={`control-btn ${isRunning ? 'pause' : 'play'}`}\r\n              onClick={isRunning ? pauseSimulation : startSimulation}\r\n              disabled={connectionStatus !== 'connected'}\r\n            >\r\n              {isRunning ? <Pause size={20} /> : <Play size={20} />}\r\n              {isRunning ? 'Pause' : 'Start'}\r\n            </button>\r\n            <button className=\"control-btn reset\" onClick={resetSimulation}>\r\n              <RotateCcw size={20} />\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Connection Status Alert */}\r\n        {connectionStatus !== 'connected' && (\r\n          <motion.div \r\n            className=\"connection-alert\"\r\n            initial={{ opacity: 0, y: -10 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n          >\r\n            <AlertCircle size={16} />\r\n            <span>Not connected to simulation server. Please ensure the backend is running.</span>\r\n          </motion.div>\r\n        )}\r\n\r\n        {/* Progress Bar */}\r\n        <motion.div \r\n          className=\"progress-section\"\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.5, delay: 0.1 }}\r\n        >\r\n          <div className=\"progress-bar\">\r\n            <div \r\n              className=\"progress-fill\" \r\n              style={{ width: `${(currentLap / totalLaps) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"progress-info\">\r\n            <span>Lap {currentLap} of {totalLaps}</span>\r\n            <span>{formatTime(simulationTime)}</span>\r\n          </div>\r\n        </motion.div>\r\n\r\n        {/* Main Content */}\r\n        <div className=\"dashboard-content\">\r\n          {/* Video Panel */}\r\n          <motion.div \r\n            className=\"video-panel\"\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.2 }}\r\n          >\r\n            <div className=\"video-container\">\r\n              <h3>Live Simulation</h3>\r\n              <div className=\"video-frame\">\r\n                {videoError ? (\r\n                  <div className=\"video-error\">\r\n                    <AlertCircle size={48} />\r\n                    <p>{videoError}</p>\r\n                  </div>\r\n                ) : simulationId && videoStreaming ? (\r\n                  <img \r\n                    src={`http://localhost:5000/api/simulation/${simulationId}/video_feed`}\r\n                    alt=\"Simulation Video\" \r\n                    className=\"simulation-video\"\r\n                    onError={() => setVideoError('Failed to load video stream')}\r\n                    onLoad={() => setVideoError(null)}\r\n                  />\r\n                ) : (\r\n                  <div className=\"video-placeholder\">\r\n                    <Car size={48} />\r\n                    <p>{videoStreaming ? 'Waiting for video...' : 'No video stream'}</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n              <div className=\"video-controls\">\r\n                <span className={`streaming-indicator ${videoStreaming ? 'active' : 'inactive'}`}>\r\n                  <div className={`indicator-dot ${videoStreaming ? 'active' : 'inactive'}`}></div>\r\n                  {videoStreaming ? 'Streaming' : 'Not Streaming'}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Left Panel - Metrics */}\r\n          <motion.div \r\n            className=\"metrics-panel\"\r\n            initial={{ opacity: 0, x: -20 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.3 }}\r\n          >\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Zap size={20} />\r\n                <span>AI Performance</span>\r\n              </div>\r\n              <div className=\"metric-value\">{formatTime(simulationData.ai.lapTime)}</div>\r\n              <div className=\"metric-label\">Lap Time</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Gauge size={20} />\r\n                <span>Speed</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.speed.toFixed(1)}</div>\r\n              <div className=\"metric-label\">km/h</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Leaf size={20} />\r\n                <span>Energy Saved</span>\r\n              </div>\r\n              <div className=\"metric-value\">{simulationData.ai.co2Saved.toFixed(1)}</div>\r\n              <div className=\"metric-label\">CO₂ Saved</div>\r\n            </div>\r\n\r\n            <div className=\"metric-card\">\r\n              <div className=\"metric-header\">\r\n                <Target size={20} />\r\n                <span>Steering</span>\r\n              </div>\r\n              <div className=\"metric-value\">{(simulationData.ai.steering * 180 / Math.PI).toFixed(1)}</div>\r\n              <div className=\"metric-label\">degrees</div>\r\n            </div>\r\n          </motion.div>\r\n\r\n          {/* Right Panel - Charts */}\r\n          <motion.div \r\n            className=\"charts-panel\"\r\n            initial={{ opacity: 0, x: 20 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ duration: 0.5, delay: 0.4 }}\r\n          >\r\n            {/* Tab Navigation */}\r\n            <div className=\"tab-navigation\">\r\n              {tabs.map(tab => (\r\n                <button\r\n                  key={tab.id}\r\n                  className={`tab-btn ${activeTab === tab.id ? 'active' : ''}`}\r\n                  onClick={() => setActiveTab(tab.id)}\r\n                >\r\n                  <tab.icon size={16} />\r\n                  {tab.label}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Tab Content */}\r\n            <div className=\"tab-content\">\r\n              {activeTab === 'telemetry' && (\r\n                <div className=\"chart-container\">\r\n                  <h3>Live Telemetry</h3>\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <LineChart data={telemetryData}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"time\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Line type=\"monotone\" dataKey=\"aiSpeed\" stroke=\"#00ff88\" strokeWidth={2} name=\"AI Speed\" />\r\n                      <Line type=\"monotone\" dataKey=\"humanSpeed\" stroke=\"#ff6b6b\" strokeWidth={2} name=\"Human Speed\" />\r\n                    </LineChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'performance' && (\r\n                <div className=\"chart-container\">\r\n                  <h3>Performance Metrics</h3>\r\n                  <ResponsiveContainer width=\"100%\" height={300}>\r\n                    <AreaChart data={telemetryData}>\r\n                      <CartesianGrid strokeDasharray=\"3 3\" />\r\n                      <XAxis dataKey=\"time\" />\r\n                      <YAxis />\r\n                      <Tooltip />\r\n                      <Area type=\"monotone\" dataKey=\"aiEnergy\" stackId=\"1\" stroke=\"#00ff88\" fill=\"#00ff88\" fillOpacity={0.6} name=\"AI Energy\" />\r\n                      <Area type=\"monotone\" dataKey=\"humanEnergy\" stackId=\"1\" stroke=\"#ff6b6b\" fill=\"#ff6b6b\" fillOpacity={0.6} name=\"Human Energy\" />\r\n                    </AreaChart>\r\n                  </ResponsiveContainer>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'insights' && (\r\n                <div className=\"insights-container\">\r\n                  <h3>Model Insights</h3>\r\n                  <div className=\"insights-grid\">\r\n                    <div className=\"insight-card\">\r\n                      <h4>Available Models</h4>\r\n                      <div className=\"model-list\">\r\n                        {Object.entries(availableModels).map(([key, model]) => (\r\n                          <div key={key} className={`model-item ${model.status}`}>\r\n                            <span className=\"model-name\">{key.toUpperCase()}</span>\r\n                            <span className=\"model-status\">{model.status}</span>\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"insight-card\">\r\n                      <h4>System Status</h4>\r\n                      <div className=\"status-info\">\r\n                        <p>Connection: {connectionStatus}</p>\r\n                        <p>Simulation ID: {simulationId || 'None'}</p>\r\n                        <p>Data Points: {telemetryData.length}</p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimulationDashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}